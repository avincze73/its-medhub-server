package testing;


/*import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;*/

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import tdsclients.radClient.CaseViewer;
import casemodule.downloading.LocalCaseDownloader;
import casemodule.dto.DicomImageDTO;
import event.DicomDataSetDownloadedEvent;
import event.DicomDataSetDownloadedEventListener;
import event.ITSEventManager;

//public class LocalCaseDownloaderFrame2 extends javax.swing.JFrame implements DicomDataSetDownloadedEventListener {
public class LocalCaseDownloaderFrame2 extends JFrame implements DicomDataSetDownloadedEventListener {

	
	
    /** Creates new form NewJFrame */
    public LocalCaseDownloaderFrame2() {
        try {
            initComponents();
            ITSEventManager.getEventListenerList().add(DicomDataSetDownloadedEventListener.class, this);
            LocalCaseDownloader.getInstance();
            tdsclients.radClient.CaseViewer.setDefaultScreenPreferences();
            Thread.sleep(6000);
            loadViewer();
        } catch (InterruptedException ex) {
            Logger.getLogger(LocalCaseDownloaderFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocalCaseDownloaderFrame2().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void eventOccured(DicomDataSetDownloadedEvent event) {

        if (event.getSource() instanceof String) {
            jTextField1.setText(event.getSource().toString());
        } else {
            jTextField1.setText(((DicomImageDTO) event.getSource()).getInstanceUid());
        }
    }
    
    
    
    
    
    
    private void loadViewer(){
    	CaseViewer newViewer = tdsclients.radClient.CaseViewer.createCaseViewer(this);
		newViewer.repaint();				
		newViewer.setVisible(true);
    }
    
    
    
    
}



