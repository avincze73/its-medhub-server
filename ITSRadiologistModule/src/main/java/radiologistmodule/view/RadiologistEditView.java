/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RadiologistEditView.java
 *
 * Created on 2010.10.05., 11:18:50
 */
package radiologistmodule.view;

import common.exception.ConstraintException;
import converter.DateTableCellRenderer;
import converter.DateTimeConverter;
import converter.DateTimeTableCellRenderer;
import converter.TDSListCellRenderer;
import hospitalmodule.dto.HospitalDTO;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JTabbedPane;
import javax.swing.border.TitledBorder;
import masterdatamodule.dto.CountryDTO;
import masterdatamodule.dto.RegLicQualDTO;
import org.jdesktop.swingx.decorator.HighlighterFactory;
import radiologistmodule.dto.CompanyAssignmentDTO;
import radiologistmodule.dto.CompanyDTO;
import radiologistmodule.dto.RadAvailabilityDTO;
import radiologistmodule.dto.RadCompetenceDTO;
import radiologistmodule.dto.RegLicQualOwnershipDTO;
import radiologistmodule.dto.SuperVisionDTO;
import radiologistmodule.dto.TDSRadiologistDTO;
import radiologistmodule.dto.WorkPlaceDTO;
import radiologistmodule.iview.IRadiologistEditView;
import radiologistmodule.viewmodel.RadiologistEditViewModel;
import usermodule.dto.TDSRadiologistRoleAssignmentDTO;
import usermodule.dto.TDSRadiologistRoleDTO;

/**
 *
 * @author vincze.attila
 */
public final class RadiologistEditView extends javax.swing.JInternalFrame
        implements IRadiologistEditView {

    private RadiologistEditViewModel viewModel;

    /** Creates new form RadiologistEditView */
    public RadiologistEditView() {
        viewModel = new RadiologistEditViewModel(this);
        initComponents();
        saveEntity(RadCompetenceDTO.class);
        saveEntity(RegLicQualOwnershipDTO.class);
        saveEntity(RadAvailabilityDTO.class);
        saveEntity(SuperVisionDTO.class);
        saveEntity(WorkPlaceDTO.class);
        saveEntity(CompanyAssignmentDTO.class);
        ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).setNorthPane(null);
        cmbCaCompany.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                viewModel.getCompanyAssignmentViewModel().setSelectedCompany(
                        (CompanyDTO) cmbCaCompany.getSelectedItem());
            }
        });

        cmbWpHospital.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                viewModel.getWorkplaceViewModel().setSelectedHospital(
                        (HospitalDTO) cmbWpHospital.getSelectedItem());
            }
        });
    }

    public RadiologistEditViewModel getViewModel() {
        return viewModel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        tbpRadiologist = new javax.swing.JTabbedPane();
        pnlUserInfo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        loginName = new javax.swing.JLabel();
        txtLoginName = new javax.swing.JTextField();
        password = new javax.swing.JLabel();
        pwfPassword = new javax.swing.JPasswordField();
        sex = new javax.swing.JLabel();
        cmbSex = new javax.swing.JComboBox();
        tdsEmail = new javax.swing.JLabel();
        txtTDSEmail = new javax.swing.JTextField();
        workEmail = new javax.swing.JLabel();
        txtWorkEmail = new javax.swing.JTextField();
        workTel = new javax.swing.JLabel();
        txtWorkTel = new javax.swing.JTextField();
        workFax = new javax.swing.JLabel();
        txtWorkFax = new javax.swing.JTextField();
        placeOfFax = new javax.swing.JLabel();
        txtPlaceOfFax = new javax.swing.JTextField();
        skype = new javax.swing.JLabel();
        txtSkype = new javax.swing.JTextField();
        msn = new javax.swing.JLabel();
        txtMsn = new javax.swing.JTextField();
        chbActive = new javax.swing.JCheckBox();
        chbGetsSystemEmails = new javax.swing.JCheckBox();
        addingDateTime = new javax.swing.JLabel();
        txtAddingDateTime = new javax.swing.JFormattedTextField();
        pnlBaseData = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        reportSendingCode = new javax.swing.JLabel();
        txtReportSendigCode = new javax.swing.JTextField();
        accountNumber = new javax.swing.JLabel();
        txtAccountNumber = new javax.swing.JTextField();
        creditValidity = new javax.swing.JLabel();
        lastCheck = new javax.swing.JLabel();
        chbEnglishAllowed = new javax.swing.JCheckBox();
        defaultNormalAvailabilityHrsPerWeekDay = new javax.swing.JLabel();
        spnDefaultNormalAvailabilityHrsPerWeekDay = new javax.swing.JSpinner();
        defaultMaxAvailabilityHrsPerWeekDay = new javax.swing.JLabel();
        spnDefaultMaxAvailabilityHrsPerWeekDay = new javax.swing.JSpinner();
        defaultNormalAvailabilityHrsPerWeekendDay = new javax.swing.JLabel();
        spnDefaultNormalAvailabilityHrsPerWeekendDay = new javax.swing.JSpinner();
        defaultMaxAvailabilityHrsPerWeekendDay = new javax.swing.JLabel();
        spnDefaultMaxAvailabilityHrsPerWeekendDay = new javax.swing.JSpinner();
        workDemandPriority = new javax.swing.JLabel();
        spnWorkDemandPriority = new javax.swing.JSpinner();
        englishLanguageCompetence = new javax.swing.JLabel();
        spnEnglishLanguageCompetence = new javax.swing.JSpinner();
        hungarianLanguageCompetence = new javax.swing.JLabel();
        spnHungarianLanguageCompetence = new javax.swing.JSpinner();
        hungarianSalaryRate = new javax.swing.JLabel();
        txtHungarianSalaryRate = new javax.swing.JFormattedTextField();
        englishSalaryRate = new javax.swing.JLabel();
        txtEnglishSalaryRate = new javax.swing.JFormattedTextField();
        radInvoiceClosingDay = new javax.swing.JLabel();
        spnRadInvoiceClosingDay = new javax.swing.JSpinner();
        radPaymentDay = new javax.swing.JLabel();
        spnRadPaymentDay = new javax.swing.JSpinner();
        chIinProbation = new javax.swing.JCheckBox();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        pnlRadCompetence = new javax.swing.JPanel();
        pnlRcAction = new javax.swing.JPanel();
        btnRcEdit = new javax.swing.JButton();
        btnRcSave = new javax.swing.JButton();
        btnRcCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRadCompetences = new javax.swing.JTable();
        pnlRegLicQualOwnership = new javax.swing.JPanel();
        pnlRlqoList = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRegLicQualOwnership = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        pnlRlqoAction = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnRlqoNew = new javax.swing.JButton();
        btnRlqoDelete = new javax.swing.JButton();
        pnlRlqoEdit = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        cmbRlcqRegLicQual = new javax.swing.JComboBox();
        rlqoRegLicQual = new javax.swing.JLabel();
        txtRlqoCertificateNumber = new javax.swing.JTextField();
        chbRlqoActive = new javax.swing.JCheckBox();
        rlqoValidBegin = new javax.swing.JLabel();
        rlcoCertificateNumber = new javax.swing.JLabel();
        rlqoValidEnd = new javax.swing.JLabel();
        dtcRlqoValidBegin = new com.toedter.calendar.JDateChooser();
        dtcRlqoValidEnd = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        btnRlqoSave = new javax.swing.JButton();
        btnRlqoCancel = new javax.swing.JButton();
        btnRlqoEdit = new javax.swing.JButton();
        pnlRadAvailability = new javax.swing.JPanel();
        pnlRaList = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRadAvailability = new org.jdesktop.swingx.JXTable();
        pnlRaDetail = new org.jdesktop.swingx.JXTitledPanel();
        pnlRaAction = new javax.swing.JPanel();
        btnRaNew = new javax.swing.JButton();
        btnRaDelete = new javax.swing.JButton();
        btnRaEdit = new javax.swing.JButton();
        pnlRaEdit = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        btnRaSave = new javax.swing.JButton();
        btnRaCancel = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        from = new javax.swing.JLabel();
        to = new javax.swing.JLabel();
        added = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        cbxValid = new javax.swing.JCheckBox();
        cbxConfirmedByPM = new javax.swing.JCheckBox();
        cbxConfirmedByRad = new javax.swing.JCheckBox();
        normalAvailability = new javax.swing.JLabel();
        maxAvailability = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblNormalAvailabilityPerWeek = new org.jdesktop.swingx.JXTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblMaxAvailabilityPerWeek = new org.jdesktop.swingx.JXTable();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        pnlSupervised = new javax.swing.JPanel();
        tpSuDetail = new org.jdesktop.swingx.JXTitledPanel();
        pnlSuAction = new javax.swing.JPanel();
        btnSuNew = new javax.swing.JButton();
        btnSuDelete = new javax.swing.JButton();
        btnSuEdit = new javax.swing.JButton();
        pnlSuEdit = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btnSuSave = new javax.swing.JButton();
        btnSuCancel = new javax.swing.JButton();
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        suStarted = new javax.swing.JLabel();
        dtpSuStarted = new org.jdesktop.swingx.JXDatePicker();
        suEnded = new javax.swing.JLabel();
        dtpSuEnded = new org.jdesktop.swingx.JXDatePicker();
        suAdded = new javax.swing.JLabel();
        txtSuAdded = new org.jdesktop.swingx.JXTextField();
        suSupervised = new javax.swing.JLabel();
        cmbSuSupervised = new javax.swing.JComboBox();
        tpSuList = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblSuperVision = new org.jdesktop.swingx.JXTable();
        pnlRole = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        btnRoleNew = new javax.swing.JButton();
        btnRoleDelete = new javax.swing.JButton();
        btnRoleEdit = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        btnRoleSave = new javax.swing.JButton();
        btnRoleCancel = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        roleAdded = new javax.swing.JLabel();
        txtRoleAdded = new javax.swing.JTextField();
        roleAssignmentStart = new javax.swing.JLabel();
        rolePlannedEnd = new javax.swing.JLabel();
        roleEnded = new javax.swing.JLabel();
        cmbRoleName = new javax.swing.JComboBox();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        roleName = new javax.swing.JLabel();
        txtRoleEnded = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblRole = new javax.swing.JTable();
        pnlCompany = new javax.swing.JPanel();
        pnlCpList = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCompanyAssignment = new org.jdesktop.swingx.JXTable();
        pnlCpDetail = new javax.swing.JPanel();
        jXTitledPanel5 = new org.jdesktop.swingx.JXTitledPanel();
        jPanel20 = new javax.swing.JPanel();
        btnCaNew = new javax.swing.JButton();
        btnCaDelete = new javax.swing.JButton();
        btnCaEdit = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        btnCaSave = new javax.swing.JButton();
        btnCaCancel = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        caStarted = new javax.swing.JLabel();
        dtpCaStarted = new org.jdesktop.swingx.JXDatePicker();
        caEnded = new javax.swing.JLabel();
        dtpCaEnded = new org.jdesktop.swingx.JXDatePicker();
        cbCaActive = new javax.swing.JCheckBox();
        caCompany = new javax.swing.JLabel();
        cmbCaCompany = new javax.swing.JComboBox();
        jXTitledPanel6 = new org.jdesktop.swingx.JXTitledPanel();
        jPanel24 = new javax.swing.JPanel();
        btnCpNew = new javax.swing.JButton();
        btnCpEdit = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        btnCpSave = new javax.swing.JButton();
        btnCpCancel = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        caName = new javax.swing.JLabel();
        txtCaName = new javax.swing.JTextField();
        caAccountNumber = new javax.swing.JLabel();
        txtCaAccountNumber = new javax.swing.JTextField();
        caAddress = new javax.swing.JLabel();
        txtCaAddress = new javax.swing.JTextField();
        caTaxAuthorityNumber = new javax.swing.JLabel();
        txtCaTaxAuthorityNumber = new javax.swing.JTextField();
        caCountry = new javax.swing.JLabel();
        caCmbCountry = new javax.swing.JComboBox();
        pnlWorkPlace = new javax.swing.JPanel();
        pnlWpList = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblWorkplace = new org.jdesktop.swingx.JXTable();
        pnlCpDetail1 = new javax.swing.JPanel();
        jXTitledPanel7 = new org.jdesktop.swingx.JXTitledPanel();
        jPanel28 = new javax.swing.JPanel();
        btnWpNew = new javax.swing.JButton();
        btnWpDelete = new javax.swing.JButton();
        btnWpEdit = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        btnWpSave = new javax.swing.JButton();
        btnWpCancel = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        wpFromDate = new javax.swing.JLabel();
        dtpWpFromDate = new org.jdesktop.swingx.JXDatePicker();
        wpToDate = new javax.swing.JLabel();
        dtpWpToDate = new org.jdesktop.swingx.JXDatePicker();
        wpHospital = new javax.swing.JLabel();
        cmbWpHospital = new javax.swing.JComboBox();
        jXTitledPanel8 = new org.jdesktop.swingx.JXTitledPanel();
        jPanel32 = new javax.swing.JPanel();
        btnWpEditHospital = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        btnWpSaveHospital = new javax.swing.JButton();
        btnWpCancelHospital = new javax.swing.JButton();
        jPanel35 = new javax.swing.JPanel();
        wpOfficialName = new javax.swing.JLabel();
        txtWpOfficialName = new javax.swing.JTextField();
        wpGovBody = new javax.swing.JLabel();
        txtWpGovBody = new javax.swing.JTextField();
        wpShortName = new javax.swing.JLabel();
        txtWpShortName = new javax.swing.JTextField();
        caWpAddress = new javax.swing.JLabel();
        txtWpAddress = new javax.swing.JTextField();
        wpRegion = new javax.swing.JLabel();
        txtWpRegion = new javax.swing.JTextField();
        pnlCalendar = new org.jdesktop.swingx.JXTitledPanel();
        jPanel17 = new javax.swing.JPanel();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jPanel36 = new javax.swing.JPanel();
        btnCalEdit = new javax.swing.JButton();
        btnCalSave = new javax.swing.JButton();
        btnCalCancel = new javax.swing.JButton();
        jPanel37 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        dailyAvailabilityPanel1 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel2 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel7 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel3 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel13 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel4 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel5 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel6 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel8 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel14 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel9 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel10 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel12 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel11 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel15 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel19 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel18 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel17 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel16 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel20 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel21 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel22 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel23 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel25 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel24 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel26 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel27 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel28 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel29 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel31 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel30 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel32 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel33 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel34 = new commonmodule.view.DailyAvailabilityPanel();
        dailyAvailabilityPanel35 = new commonmodule.view.DailyAvailabilityPanel();
        pnlAction = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setBackground(new java.awt.Color(227, 239, 251));
        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/radiologistmodule16.png"))); // NOI18N

        tbpRadiologist.setBackground(new java.awt.Color(227, 239, 251));
        tbpRadiologist.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tbpRadiologistStateChanged(evt);
            }
        });

        pnlUserInfo.setBackground(new java.awt.Color(227, 239, 251));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("radiologistmodule/bundle/RadiologistEditBundle"); // NOI18N
        name.setText(bundle.getString("RadiologistEditView.name.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(name, gridBagConstraints);

        txtName.setPreferredSize(new java.awt.Dimension(150, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.name}"), txtName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtName, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtName, gridBagConstraints);

        loginName.setText(bundle.getString("RadiologistEditView.loginName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(loginName, gridBagConstraints);

        txtLoginName.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.loginName}"), txtLoginName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtLoginName, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtLoginName, gridBagConstraints);

        password.setText(bundle.getString("RadiologistEditView.password.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(password, gridBagConstraints);

        pwfPassword.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.password}"), pwfPassword, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), pwfPassword, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(pwfPassword, gridBagConstraints);

        sex.setText(bundle.getString("RadiologistEditView.sex.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(sex, gridBagConstraints);

        cmbSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Férfi", "Nő", "Nincs infó" }));
        cmbSex.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.sex}"), cmbSex, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), cmbSex, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(cmbSex, gridBagConstraints);

        tdsEmail.setText(bundle.getString("RadiologistEditView.tdsEmail.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(tdsEmail, gridBagConstraints);

        txtTDSEmail.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.tdsEmail}"), txtTDSEmail, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtTDSEmail, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtTDSEmail, gridBagConstraints);

        workEmail.setText(bundle.getString("RadiologistEditView.workEmail.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(workEmail, gridBagConstraints);

        txtWorkEmail.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.workEmail}"), txtWorkEmail, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtWorkEmail, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtWorkEmail, gridBagConstraints);

        workTel.setText(bundle.getString("RadiologistEditView.workTel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(workTel, gridBagConstraints);

        txtWorkTel.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.workTel}"), txtWorkTel, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtWorkTel, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtWorkTel, gridBagConstraints);

        workFax.setText(bundle.getString("RadiologistEditView.workFax.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(workFax, gridBagConstraints);

        txtWorkFax.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.workFax}"), txtWorkFax, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtWorkFax, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtWorkFax, gridBagConstraints);

        placeOfFax.setText(bundle.getString("RadiologistEditView.placeOfFax.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(placeOfFax, gridBagConstraints);

        txtPlaceOfFax.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.placeOfFax}"), txtPlaceOfFax, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtPlaceOfFax, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtPlaceOfFax, gridBagConstraints);

        skype.setText(bundle.getString("RadiologistEditView.skype.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(skype, gridBagConstraints);

        txtSkype.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.skype}"), txtSkype, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtSkype, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtSkype, gridBagConstraints);

        msn.setText(bundle.getString("RadiologistEditView.msn.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(msn, gridBagConstraints);

        txtMsn.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.msn}"), txtMsn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtMsn, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtMsn, gridBagConstraints);

        chbActive.setText(bundle.getString("RadiologistEditView.chbActive.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.active}"), chbActive, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), chbActive, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(chbActive, gridBagConstraints);

        chbGetsSystemEmails.setText(bundle.getString("RadiologistEditView.chbGetsSystemEmails.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.getSystemEmails}"), chbGetsSystemEmails, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), chbGetsSystemEmails, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(chbGetsSystemEmails, gridBagConstraints);

        addingDateTime.setText(bundle.getString("RadiologistEditView.addingDateTime.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(addingDateTime, gridBagConstraints);

        txtAddingDateTime.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.userInfo.addingDateTime}"), txtAddingDateTime, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtAddingDateTime, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(txtAddingDateTime, gridBagConstraints);

        javax.swing.GroupLayout pnlUserInfoLayout = new javax.swing.GroupLayout(pnlUserInfo);
        pnlUserInfo.setLayout(pnlUserInfoLayout);
        pnlUserInfoLayout.setHorizontalGroup(
            pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(444, Short.MAX_VALUE))
        );
        pnlUserInfoLayout.setVerticalGroup(
            pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(233, Short.MAX_VALUE))
        );

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlUserInfo.TabConstraints.tabTitle"), pnlUserInfo); // NOI18N

        pnlBaseData.setBackground(new java.awt.Color(227, 239, 251));

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        reportSendingCode.setText(bundle.getString("RadiologistEditView.reportSendingCode.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(reportSendingCode, gridBagConstraints);

        txtReportSendigCode.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.reportSendingCode}"), txtReportSendigCode, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtReportSendigCode, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(txtReportSendigCode, gridBagConstraints);

        accountNumber.setText(bundle.getString("RadiologistEditView.accountNumber.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(accountNumber, gridBagConstraints);

        txtAccountNumber.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.accountNumber}"), txtAccountNumber, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtAccountNumber, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(txtAccountNumber, gridBagConstraints);

        creditValidity.setText(bundle.getString("RadiologistEditView.creditValidity.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(creditValidity, gridBagConstraints);

        lastCheck.setText(bundle.getString("RadiologistEditView.lastCheck.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(lastCheck, gridBagConstraints);

        chbEnglishAllowed.setText(bundle.getString("RadiologistEditView.chbEnglishAllowed.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.englishAllowed}"), chbEnglishAllowed, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), chbEnglishAllowed, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(chbEnglishAllowed, gridBagConstraints);

        defaultNormalAvailabilityHrsPerWeekDay.setText(bundle.getString("RadiologistEditView.defaultNormalAvailabilityHrsPerWeekDay.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(defaultNormalAvailabilityHrsPerWeekDay, gridBagConstraints);

        spnDefaultNormalAvailabilityHrsPerWeekDay.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.defaultNormalAvailabilityHrsPerWeekDay}"), spnDefaultNormalAvailabilityHrsPerWeekDay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnDefaultNormalAvailabilityHrsPerWeekDay, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnDefaultNormalAvailabilityHrsPerWeekDay, gridBagConstraints);

        defaultMaxAvailabilityHrsPerWeekDay.setText(bundle.getString("RadiologistEditView.defaultMaxAvailabilityHrsPerWeekDay.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(defaultMaxAvailabilityHrsPerWeekDay, gridBagConstraints);

        spnDefaultMaxAvailabilityHrsPerWeekDay.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.defaultMaxAvailabilityHrsPerWeekDay}"), spnDefaultMaxAvailabilityHrsPerWeekDay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnDefaultMaxAvailabilityHrsPerWeekDay, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnDefaultMaxAvailabilityHrsPerWeekDay, gridBagConstraints);

        defaultNormalAvailabilityHrsPerWeekendDay.setText(bundle.getString("RadiologistEditView.defaultNormalAvailabilityHrsPerWeekendDay.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(defaultNormalAvailabilityHrsPerWeekendDay, gridBagConstraints);

        spnDefaultNormalAvailabilityHrsPerWeekendDay.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.defaultNormalAvailabilityHrsPerWeekendDay}"), spnDefaultNormalAvailabilityHrsPerWeekendDay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnDefaultNormalAvailabilityHrsPerWeekendDay, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnDefaultNormalAvailabilityHrsPerWeekendDay, gridBagConstraints);

        defaultMaxAvailabilityHrsPerWeekendDay.setText(bundle.getString("RadiologistEditView.defaultMaxAvailabilityHrsPerWeekendDay.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(defaultMaxAvailabilityHrsPerWeekendDay, gridBagConstraints);

        spnDefaultMaxAvailabilityHrsPerWeekendDay.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.defaultMaxAvailabilityHrsPerWeekendDay}"), spnDefaultMaxAvailabilityHrsPerWeekendDay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnDefaultMaxAvailabilityHrsPerWeekendDay, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnDefaultMaxAvailabilityHrsPerWeekendDay, gridBagConstraints);

        workDemandPriority.setText(bundle.getString("RadiologistEditView.workDemandPriority.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(workDemandPriority, gridBagConstraints);

        spnWorkDemandPriority.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.workDemandPriority}"), spnWorkDemandPriority, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnWorkDemandPriority, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnWorkDemandPriority, gridBagConstraints);

        englishLanguageCompetence.setText(bundle.getString("RadiologistEditView.englishLanguageCompetence.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(englishLanguageCompetence, gridBagConstraints);

        spnEnglishLanguageCompetence.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.englishLanguageCompetence}"), spnEnglishLanguageCompetence, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnEnglishLanguageCompetence, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnEnglishLanguageCompetence, gridBagConstraints);

        hungarianLanguageCompetence.setText(bundle.getString("RadiologistEditView.hungarianLanguageCompetence.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(hungarianLanguageCompetence, gridBagConstraints);

        spnHungarianLanguageCompetence.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.hungarianLanguageCompetence}"), spnHungarianLanguageCompetence, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnHungarianLanguageCompetence, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnHungarianLanguageCompetence, gridBagConstraints);

        hungarianSalaryRate.setText(bundle.getString("RadiologistEditView.hungarianSalaryRate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(hungarianSalaryRate, gridBagConstraints);

        txtHungarianSalaryRate.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.hungarianSalaryRate}"), txtHungarianSalaryRate, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtHungarianSalaryRate, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(txtHungarianSalaryRate, gridBagConstraints);

        englishSalaryRate.setText(bundle.getString("RadiologistEditView.englishSalaryRate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(englishSalaryRate, gridBagConstraints);

        txtEnglishSalaryRate.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.englishSalaryRate}"), txtEnglishSalaryRate, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), txtEnglishSalaryRate, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(txtEnglishSalaryRate, gridBagConstraints);

        radInvoiceClosingDay.setText(bundle.getString("RadiologistEditView.radInvoiceClosingDay.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(radInvoiceClosingDay, gridBagConstraints);

        spnRadInvoiceClosingDay.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.radInvoiceClosingDay}"), spnRadInvoiceClosingDay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnRadInvoiceClosingDay, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnRadInvoiceClosingDay, gridBagConstraints);

        radPaymentDay.setText(bundle.getString("RadiologistEditView.radPaymentDay.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(radPaymentDay, gridBagConstraints);

        spnRadPaymentDay.setPreferredSize(new java.awt.Dimension(50, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.radPaymentDay}"), spnRadPaymentDay, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), spnRadPaymentDay, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(spnRadPaymentDay, gridBagConstraints);

        chIinProbation.setText(bundle.getString("RadiologistEditView.chIinProbation.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.inProbation}"), chIinProbation, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), chIinProbation, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(chIinProbation, gridBagConstraints);

        jXDatePicker1.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.creditValidity}"), jXDatePicker1, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jXDatePicker1, gridBagConstraints);

        jXDatePicker2.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.selectedEntity.lastCheck}"), jXDatePicker2, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jXDatePicker2, gridBagConstraints);

        javax.swing.GroupLayout pnlBaseDataLayout = new javax.swing.GroupLayout(pnlBaseData);
        pnlBaseData.setLayout(pnlBaseDataLayout);
        pnlBaseDataLayout.setHorizontalGroup(
            pnlBaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );
        pnlBaseDataLayout.setVerticalGroup(
            pnlBaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlBaseData.TabConstraints.tabTitle"), pnlBaseData); // NOI18N

        pnlRadCompetence.setBackground(new java.awt.Color(227, 239, 251));
        pnlRadCompetence.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pnlRadCompetenceFocusGained(evt);
            }
        });
        pnlRadCompetence.setLayout(new java.awt.BorderLayout());

        pnlRcAction.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.pnlRcAction.border.title"))); // NOI18N
        pnlRcAction.setOpaque(false);
        pnlRcAction.setPreferredSize(new java.awt.Dimension(356, 50));
        pnlRcAction.setLayout(new java.awt.GridBagLayout());

        btnRcEdit.setAction(viewModel.getRadCompetenceViewModel().getEditAction());
        btnRcEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnRcEdit.setText(bundle.getString("RadiologistEditView.btnRcEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radCompetenceViewModel.modeHandler.editButtonEnabled}"), btnRcEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlRcAction.add(btnRcEdit, gridBagConstraints);

        btnRcSave.setAction(viewModel.getRadCompetenceViewModel().getSaveAction());
        btnRcSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnRcSave.setText(bundle.getString("RadiologistEditView.btnRcSave.text")); // NOI18N
        btnRcSave.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnRcSave.setPreferredSize(new java.awt.Dimension(110, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radCompetenceViewModel.modeHandler.saveButtonEnabled}"), btnRcSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlRcAction.add(btnRcSave, gridBagConstraints);

        btnRcCancel.setAction(viewModel.getRadCompetenceViewModel().getCancelAction());
        btnRcCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnRcCancel.setText(bundle.getString("RadiologistEditView.btnRcCancel.text")); // NOI18N
        btnRcCancel.setPreferredSize(new java.awt.Dimension(110, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radCompetenceViewModel.modeHandler.cancelButtonEnabled}"), btnRcCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlRcAction.add(btnRcCancel, gridBagConstraints);

        pnlRadCompetence.add(pnlRcAction, java.awt.BorderLayout.PAGE_END);

        tblRadCompetences.setModel(viewModel.getRadCompetenceViewModel().getDtmRadCompetences());
        tblRadCompetences.setRowSelectionAllowed(false);
        tblRadCompetences.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radCompetenceViewModel.modeHandler.saveButtonEnabled}"), tblRadCompetences, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(tblRadCompetences);

        pnlRadCompetence.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlRadCompetence.TabConstraints.tabTitle"), pnlRadCompetence); // NOI18N

        pnlRegLicQualOwnership.setBackground(new java.awt.Color(227, 239, 251));
        pnlRegLicQualOwnership.setLayout(new java.awt.BorderLayout());

        pnlRlqoList.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.pnlRlqoList.border.title"))); // NOI18N
        pnlRlqoList.setOpaque(false);

        tblRegLicQualOwnership.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.entityList}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblRegLicQualOwnership);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${validBegin}"));
        columnBinding.setColumnName("Valid Begin");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${validEnd}"));
        columnBinding.setColumnName("Valid End");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${regLicQual.name}"));
        columnBinding.setColumnName("Reg Lic Qual.name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${certificateNumber}"));
        columnBinding.setColumnName("Certificate Number");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${active}"));
        columnBinding.setColumnName("Active");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.selectedEntity}"), tblRegLicQualOwnership, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), tblRegLicQualOwnership, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(tblRegLicQualOwnership);
        tblRegLicQualOwnership.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblRegLicQualOwnership.columnModel.title0")); // NOI18N
        tblRegLicQualOwnership.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblRegLicQualOwnership.columnModel.title1")); // NOI18N
        tblRegLicQualOwnership.getColumnModel().getColumn(1).setCellRenderer(new DateTableCellRenderer());
        tblRegLicQualOwnership.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblRegLicQualOwnership.columnModel.title2")); // NOI18N
        tblRegLicQualOwnership.getColumnModel().getColumn(2).setCellRenderer(new DateTableCellRenderer());
        tblRegLicQualOwnership.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblRegLicQualOwnership.columnModel.title3")); // NOI18N
        tblRegLicQualOwnership.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblRegLicQualOwnership.columnModel.title4")); // NOI18N
        tblRegLicQualOwnership.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("RadiologistEditView.tblRegLicQualOwnership.columnModel.title5_1")); // NOI18N

        javax.swing.GroupLayout pnlRlqoListLayout = new javax.swing.GroupLayout(pnlRlqoList);
        pnlRlqoList.setLayout(pnlRlqoListLayout);
        pnlRlqoListLayout.setHorizontalGroup(
            pnlRlqoListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 932, Short.MAX_VALUE)
        );
        pnlRlqoListLayout.setVerticalGroup(
            pnlRlqoListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
        );

        pnlRegLicQualOwnership.add(pnlRlqoList, java.awt.BorderLayout.CENTER);

        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(749, 150));
        jPanel2.setLayout(new java.awt.BorderLayout());

        pnlRlqoAction.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.pnlRlqoAction.border.title"))); // NOI18N
        pnlRlqoAction.setOpaque(false);
        pnlRlqoAction.setLayout(new java.awt.GridBagLayout());

        jPanel7.setLayout(new java.awt.GridBagLayout());

        btnRlqoNew.setAction(viewModel.getRegLicQualOwnershipViewModel().getNewAction());
        btnRlqoNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnRlqoNew.setText(bundle.getString("RadiologistEditView.btnRlqoNew.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), btnRlqoNew, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel7.add(btnRlqoNew, gridBagConstraints);

        btnRlqoDelete.setAction(viewModel.getRegLicQualOwnershipViewModel().getDeleteAction());
        btnRlqoDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/delete.png"))); // NOI18N
        btnRlqoDelete.setText(bundle.getString("RadiologistEditView.btnRlqoDelete.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.modeHandler.deleteButtonEnabled}"), btnRlqoDelete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel7.add(btnRlqoDelete, gridBagConstraints);

        pnlRlqoAction.add(jPanel7, new java.awt.GridBagConstraints());

        jPanel2.add(pnlRlqoAction, java.awt.BorderLayout.PAGE_END);

        pnlRlqoEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.pnlRlqoEdit.border.title"))); // NOI18N
        pnlRlqoEdit.setOpaque(false);
        pnlRlqoEdit.setLayout(new java.awt.BorderLayout());

        jPanel8.setOpaque(false);
        jPanel8.setLayout(new java.awt.GridBagLayout());

        cmbRlcqRegLicQual.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbRlcqRegLicQual.setPreferredSize(new java.awt.Dimension(150, 20));
        cmbRlcqRegLicQual.setRenderer(new TDSListCellRenderer());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.regLicQualList}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cmbRlcqRegLicQual);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.selectedEntity.regLicQual}"), cmbRlcqRegLicQual, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${!viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), cmbRlcqRegLicQual, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(cmbRlcqRegLicQual, gridBagConstraints);

        rlqoRegLicQual.setText(bundle.getString("RadiologistEditView.rlqoRegLicQual.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(rlqoRegLicQual, gridBagConstraints);

        txtRlqoCertificateNumber.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.selectedEntity.certificateNumber}"), txtRlqoCertificateNumber, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${!viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), txtRlqoCertificateNumber, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(txtRlqoCertificateNumber, gridBagConstraints);

        chbRlqoActive.setText(bundle.getString("RadiologistEditView.chbRlqoActive.text")); // NOI18N
        chbRlqoActive.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.selectedEntity.active}"), chbRlqoActive, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${!viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), chbRlqoActive, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(chbRlqoActive, gridBagConstraints);

        rlqoValidBegin.setText(bundle.getString("RadiologistEditView.rlqoValidBegin.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(rlqoValidBegin, gridBagConstraints);

        rlcoCertificateNumber.setText(bundle.getString("RadiologistEditView.rlcoCertificateNumber.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(rlcoCertificateNumber, gridBagConstraints);

        rlqoValidEnd.setText(bundle.getString("RadiologistEditView.rlqoValidEnd.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(rlqoValidEnd, gridBagConstraints);

        dtcRlqoValidBegin.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.selectedEntity.validBegin}"), dtcRlqoValidBegin, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${!viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), dtcRlqoValidBegin, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(dtcRlqoValidBegin, gridBagConstraints);

        dtcRlqoValidEnd.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.selectedEntity.validEnd}"), dtcRlqoValidEnd, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${!viewModel.regLicQualOwnershipViewModel.modeHandler.newButtonEnabled}"), dtcRlqoValidEnd, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(dtcRlqoValidEnd, gridBagConstraints);

        pnlRlqoEdit.add(jPanel8, java.awt.BorderLayout.WEST);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        btnRlqoSave.setAction(viewModel.getRegLicQualOwnershipViewModel().getSaveAction());
        btnRlqoSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnRlqoSave.setText(bundle.getString("RadiologistEditView.btnRlqoSave.text")); // NOI18N
        btnRlqoSave.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnRlqoSave.setPreferredSize(new java.awt.Dimension(120, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.modeHandler.saveButtonEnabled}"), btnRlqoSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel9.add(btnRlqoSave, gridBagConstraints);

        btnRlqoCancel.setAction(viewModel.getRegLicQualOwnershipViewModel().getCancelAction());
        btnRlqoCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnRlqoCancel.setText(bundle.getString("RadiologistEditView.btnRlqoCancel.text")); // NOI18N
        btnRlqoCancel.setPreferredSize(new java.awt.Dimension(120, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.modeHandler.cancelButtonEnabled}"), btnRlqoCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel9.add(btnRlqoCancel, gridBagConstraints);

        btnRlqoEdit.setAction(viewModel.getRegLicQualOwnershipViewModel().getEditAction());
        btnRlqoEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnRlqoEdit.setText(bundle.getString("RadiologistEditView.btnRlqoEdit.text")); // NOI18N
        btnRlqoEdit.setPreferredSize(new java.awt.Dimension(120, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.regLicQualOwnershipViewModel.modeHandler.editButtonEnabled}"), btnRlqoEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel9.add(btnRlqoEdit, gridBagConstraints);

        pnlRlqoEdit.add(jPanel9, java.awt.BorderLayout.EAST);

        jPanel2.add(pnlRlqoEdit, java.awt.BorderLayout.CENTER);

        pnlRegLicQualOwnership.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlRegLicQualOwnership.TabConstraints.tabTitle"), pnlRegLicQualOwnership); // NOI18N

        pnlRadAvailability.setBackground(new java.awt.Color(227, 239, 251));
        pnlRadAvailability.setLayout(new java.awt.BorderLayout());

        pnlRaList.setTitle(bundle.getString("RadiologistEditView.pnlRaList.title")); // NOI18N
        pnlRaList.getContentContainer().setLayout(new java.awt.BorderLayout());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.entityList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblRadAvailability);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fromDate}"));
        columnBinding.setColumnName("From Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${toDate}"));
        columnBinding.setColumnName("To Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${confirmedByPM}"));
        columnBinding.setColumnName("Confirmed By PM");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${confirmedByRad}"));
        columnBinding.setColumnName("Confirmed By Rad");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valid}"));
        columnBinding.setColumnName("Valid");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${added}"));
        columnBinding.setColumnName("Added");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity}"), tblRadAvailability, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane3.setViewportView(tblRadAvailability);
        tblRadAvailability.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title0")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title1")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(1).setCellRenderer(new DateTimeTableCellRenderer());
        tblRadAvailability.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title2")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(2).setCellRenderer(new DateTimeTableCellRenderer());
        tblRadAvailability.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title3")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title4")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title5")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("RadiologistEditView.tblRadAvailability.columnModel.title6")); // NOI18N
        tblRadAvailability.getColumnModel().getColumn(6).setCellRenderer(new DateTimeTableCellRenderer());

        pnlRaList.getContentContainer().add(jScrollPane3, java.awt.BorderLayout.CENTER);

        pnlRadAvailability.add(pnlRaList, java.awt.BorderLayout.CENTER);

        pnlRaDetail.setTitle(bundle.getString("RadiologistEditView.pnlRaDetail.title")); // NOI18N
        pnlRaDetail.getContentContainer().setLayout(new java.awt.BorderLayout());

        pnlRaAction.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pnlRaAction.setOpaque(false);
        pnlRaAction.setPreferredSize(new java.awt.Dimension(963, 40));
        pnlRaAction.setLayout(new java.awt.GridBagLayout());

        btnRaNew.setAction(viewModel.getRadAvailabilityViewModel().getNewAction());
        btnRaNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnRaNew.setText(bundle.getString("RadiologistEditView.btnRaNew.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.newButtonEnabled}"), btnRaNew, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlRaAction.add(btnRaNew, new java.awt.GridBagConstraints());

        btnRaDelete.setAction(viewModel.getRadAvailabilityViewModel().getDeleteAction());
        btnRaDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/delete.png"))); // NOI18N
        btnRaDelete.setText(bundle.getString("RadiologistEditView.btnRaDelete.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.deleteButtonEnabled}"), btnRaDelete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlRaAction.add(btnRaDelete, new java.awt.GridBagConstraints());

        btnRaEdit.setAction(viewModel.getRadAvailabilityViewModel().getEditAction());
        btnRaEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnRaEdit.setText(bundle.getString("RadiologistEditView.btnRaEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.editButtonEnabled}"), btnRaEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlRaAction.add(btnRaEdit, new java.awt.GridBagConstraints());

        pnlRaDetail.getContentContainer().add(pnlRaAction, java.awt.BorderLayout.SOUTH);

        pnlRaEdit.setOpaque(false);
        pnlRaEdit.setLayout(new java.awt.BorderLayout());

        jPanel10.setOpaque(false);
        jPanel10.setPreferredSize(new java.awt.Dimension(120, 133));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        btnRaSave.setAction(viewModel.getRadAvailabilityViewModel().getSaveAction());
        btnRaSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnRaSave.setText(bundle.getString("RadiologistEditView.btnRaSave.text")); // NOI18N
        btnRaSave.setAlignmentY(2.0F);
        btnRaSave.setPreferredSize(new java.awt.Dimension(110, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.saveButtonEnabled}"), btnRaSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanel10.add(btnRaSave, gridBagConstraints);

        btnRaCancel.setAction(viewModel.getRadAvailabilityViewModel().getCancelAction());
        btnRaCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnRaCancel.setText(bundle.getString("RadiologistEditView.btnRaCancel.text")); // NOI18N
        btnRaCancel.setAlignmentY(2.0F);
        btnRaCancel.setPreferredSize(new java.awt.Dimension(110, 25));
        btnRaCancel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.cancelButtonEnabled}"), btnRaCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        jPanel10.add(btnRaCancel, gridBagConstraints);

        pnlRaEdit.add(jPanel10, java.awt.BorderLayout.EAST);

        jPanel11.setOpaque(false);
        jPanel11.setLayout(new java.awt.GridBagLayout());

        from.setText(bundle.getString("RadiologistEditView.from.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(from, gridBagConstraints);

        to.setText(bundle.getString("RadiologistEditView.to.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(to, gridBagConstraints);

        added.setText(bundle.getString("RadiologistEditView.added.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel11.add(added, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.fromDate}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(jTextField1, gridBagConstraints);

        cbxValid.setText(bundle.getString("RadiologistEditView.cbxValid.text")); // NOI18N
        cbxValid.setEnabled(false);
        cbxValid.setOpaque(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.valid}"), cbxValid, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel11.add(cbxValid, gridBagConstraints);

        cbxConfirmedByPM.setText(bundle.getString("RadiologistEditView.cbxConfirmedByPM.text")); // NOI18N
        cbxConfirmedByPM.setEnabled(false);
        cbxConfirmedByPM.setOpaque(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.confirmedByPM}"), cbxConfirmedByPM, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel11.add(cbxConfirmedByPM, gridBagConstraints);

        cbxConfirmedByRad.setText(bundle.getString("RadiologistEditView.cbxConfirmedByRad.text")); // NOI18N
        cbxConfirmedByRad.setEnabled(false);
        cbxConfirmedByRad.setOpaque(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.confirmedByRad}"), cbxConfirmedByRad, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel11.add(cbxConfirmedByRad, gridBagConstraints);

        normalAvailability.setLabelFor(tblNormalAvailabilityPerWeek);
        normalAvailability.setText(bundle.getString("RadiologistEditView.normalAvailability.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel11.add(normalAvailability, gridBagConstraints);

        maxAvailability.setText(bundle.getString("RadiologistEditView.maxAvailability.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(maxAvailability, gridBagConstraints);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(400, 60));

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.normalAvailabilityList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblNormalAvailabilityPerWeek);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${monday}"));
        columnBinding.setColumnName("Monday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tuesday}"));
        columnBinding.setColumnName("Tuesday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${wednesday}"));
        columnBinding.setColumnName("Wednesday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${thursday}"));
        columnBinding.setColumnName("Thursday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${friday}"));
        columnBinding.setColumnName("Friday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${saturday}"));
        columnBinding.setColumnName("Saturday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sunday}"));
        columnBinding.setColumnName("Sunday");
        columnBinding.setColumnClass(Double.class);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.saveButtonEnabled}"), tblNormalAvailabilityPerWeek, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        jScrollPane4.setViewportView(tblNormalAvailabilityPerWeek);
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title0")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title1")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title2")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title3")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title4")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title5")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title6")); // NOI18N
        tblNormalAvailabilityPerWeek.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("RadiologistEditView.tblNormalAvailabilityPerWeek.columnModel.title7")); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel11.add(jScrollPane4, gridBagConstraints);

        jScrollPane5.setPreferredSize(new java.awt.Dimension(400, 60));

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.maxAvailabilityList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblMaxAvailabilityPerWeek);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${monday}"));
        columnBinding.setColumnName("Monday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tuesday}"));
        columnBinding.setColumnName("Tuesday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${wednesday}"));
        columnBinding.setColumnName("Wednesday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${thursday}"));
        columnBinding.setColumnName("Thursday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${friday}"));
        columnBinding.setColumnName("Friday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${saturday}"));
        columnBinding.setColumnName("Saturday");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sunday}"));
        columnBinding.setColumnName("Sunday");
        columnBinding.setColumnClass(Double.class);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.modeHandler.saveButtonEnabled}"), tblMaxAvailabilityPerWeek, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        jScrollPane5.setViewportView(tblMaxAvailabilityPerWeek);
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title0")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title1")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title2")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title3")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title4")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title5")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title6")); // NOI18N
        tblMaxAvailabilityPerWeek.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("RadiologistEditView.tblMaxAvailabilityPerWeek.columnModel.title7")); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel11.add(jScrollPane5, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setPreferredSize(new java.awt.Dimension(200, 20));
        jTextField2.setRequestFocusEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.toDate}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(jTextField2, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setPreferredSize(new java.awt.Dimension(200, 20));
        jTextField3.setRequestFocusEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.radAvailabilityViewModel.selectedEntity.added}"), jTextField3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(new DateTimeConverter());
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(jTextField3, gridBagConstraints);

        pnlRaEdit.add(jPanel11, java.awt.BorderLayout.CENTER);

        pnlRaDetail.getContentContainer().add(pnlRaEdit, java.awt.BorderLayout.CENTER);

        pnlRadAvailability.add(pnlRaDetail, java.awt.BorderLayout.SOUTH);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlRadAvailability.TabConstraints.tabTitle"), pnlRadAvailability); // NOI18N

        pnlSupervised.setBackground(new java.awt.Color(227, 239, 251));
        pnlSupervised.setLayout(new java.awt.BorderLayout());

        tpSuDetail.setTitle(bundle.getString("RadiologistEditView.tpSuDetail.title")); // NOI18N
        tpSuDetail.getContentContainer().setLayout(new java.awt.BorderLayout());

        pnlSuAction.setOpaque(false);
        pnlSuAction.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pnlSuAction.setPreferredSize(new java.awt.Dimension(963, 40));
        pnlSuAction.setLayout(new java.awt.GridBagLayout());

        btnSuNew.setAction(viewModel.getSuperVisionViewModel().getNewAction());
        btnSuNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnSuNew.setText(bundle.getString("RadiologistEditView.btnSuNew.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.newButtonEnabled}"), btnSuNew, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlSuAction.add(btnSuNew, new java.awt.GridBagConstraints());

        btnSuDelete.setAction(viewModel.getSuperVisionViewModel().getDeleteAction());
        btnSuDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/delete.png"))); // NOI18N
        btnSuDelete.setText(bundle.getString("RadiologistEditView.btnSuDelete.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.deleteButtonEnabled}"), btnSuDelete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlSuAction.add(btnSuDelete, new java.awt.GridBagConstraints());

        btnSuEdit.setAction(viewModel.getSuperVisionViewModel().getEditAction());
        btnSuEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnSuEdit.setText(bundle.getString("RadiologistEditView.btnSuEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.editButtonEnabled}"), btnSuEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlSuAction.add(btnSuEdit, new java.awt.GridBagConstraints());

        tpSuDetail.getContentContainer().add(pnlSuAction, java.awt.BorderLayout.CENTER);

        pnlSuEdit.setOpaque(false);
        pnlSuEdit.setLayout(new java.awt.BorderLayout());

        jPanel16.setOpaque(false);
        jPanel16.setPreferredSize(new java.awt.Dimension(120, 83));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        btnSuSave.setAction(viewModel.getSuperVisionViewModel().getSaveAction());
        btnSuSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnSuSave.setText(bundle.getString("RadiologistEditView.btnSuSave.text")); // NOI18N
        btnSuSave.setPreferredSize(new java.awt.Dimension(110, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.saveButtonEnabled}"), btnSuSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanel16.add(btnSuSave, gridBagConstraints);

        btnSuCancel.setAction(viewModel.getSuperVisionViewModel().getCancelAction());
        btnSuCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnSuCancel.setText(bundle.getString("RadiologistEditView.btnSuCancel.text")); // NOI18N
        btnSuCancel.setPreferredSize(new java.awt.Dimension(110, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.cancelButtonEnabled}"), btnSuCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        jPanel16.add(btnSuCancel, gridBagConstraints);

        pnlSuEdit.add(jPanel16, java.awt.BorderLayout.LINE_END);

        jXPanel1.setLayout(new java.awt.GridBagLayout());

        suStarted.setText(bundle.getString("RadiologistEditView.suStarted.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(suStarted, gridBagConstraints);

        dtpSuStarted.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.selectedEntity.started}"), dtpSuStarted, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.saveButtonEnabled}"), dtpSuStarted, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(dtpSuStarted, gridBagConstraints);

        suEnded.setText(bundle.getString("RadiologistEditView.suEnded.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(suEnded, gridBagConstraints);

        dtpSuEnded.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.selectedEntity.ended}"), dtpSuEnded, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.modeHandler.saveButtonEnabled}"), dtpSuEnded, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(dtpSuEnded, gridBagConstraints);

        suAdded.setText(bundle.getString("RadiologistEditView.suAdded.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(suAdded, gridBagConstraints);

        txtSuAdded.setEditable(false);
        txtSuAdded.setPreferredSize(new java.awt.Dimension(150, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.selectedEntity.added}"), txtSuAdded, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(new DateTimeConverter());
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(txtSuAdded, gridBagConstraints);

        suSupervised.setText(bundle.getString("RadiologistEditView.suSupervised.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(suSupervised, gridBagConstraints);

        cmbSuSupervised.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSuSupervised.setPreferredSize(new java.awt.Dimension(150, 20));
        cmbSuSupervised.setRenderer(new TDSListCellRenderer());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.tdsRadiologistList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cmbSuSupervised);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.selectedEntity.supervised}"), cmbSuSupervised, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jXPanel1.add(cmbSuSupervised, gridBagConstraints);

        pnlSuEdit.add(jXPanel1, java.awt.BorderLayout.CENTER);

        tpSuDetail.getContentContainer().add(pnlSuEdit, java.awt.BorderLayout.PAGE_START);

        pnlSupervised.add(tpSuDetail, java.awt.BorderLayout.PAGE_END);

        tpSuList.setTitle(bundle.getString("RadiologistEditView.tpSuList.title")); // NOI18N
        tpSuList.getContentContainer().setLayout(new java.awt.BorderLayout());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.entityList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblSuperVision);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${supervised.userInfo.name}"));
        columnBinding.setColumnName("Supervised.user Info.name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${started}"));
        columnBinding.setColumnName("Started");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ended}"));
        columnBinding.setColumnName("Ended");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${active}"));
        columnBinding.setColumnName("Active");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${added}"));
        columnBinding.setColumnName("Added");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.superVisionViewModel.selectedEntity}"), tblSuperVision, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        tblSuperVision.addHighlighter(HighlighterFactory.createSimpleStriping());
        jScrollPane7.setViewportView(tblSuperVision);
        tblSuperVision.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblSuperVision.columnModel.title0")); // NOI18N
        tblSuperVision.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblSuperVision.columnModel.title1")); // NOI18N
        tblSuperVision.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblSuperVision.columnModel.title2")); // NOI18N
        tblSuperVision.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblSuperVision.columnModel.title3")); // NOI18N
        tblSuperVision.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblSuperVision.columnModel.title4")); // NOI18N
        tblSuperVision.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("RadiologistEditView.tblSuperVision.columnModel.title5")); // NOI18N
        tblSuperVision.getColumnModel().getColumn(5).setCellRenderer(new DateTimeTableCellRenderer());

        tpSuList.getContentContainer().add(jScrollPane7, java.awt.BorderLayout.CENTER);

        pnlSupervised.add(tpSuList, java.awt.BorderLayout.CENTER);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlSupervised.TabConstraints.tabTitle"), pnlSupervised); // NOI18N

        pnlRole.setLayout(new java.awt.BorderLayout());

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.jPanel12.border.title"))); // NOI18N
        jPanel12.setPreferredSize(new java.awt.Dimension(975, 150));
        jPanel12.setLayout(new java.awt.BorderLayout());

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel13.setPreferredSize(new java.awt.Dimension(975, 40));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        btnRoleNew.setAction(viewModel.getTdsRadiologistRoleAssignmentViewModel().getNewAction());
        btnRoleNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnRoleNew.setText(bundle.getString("RadiologistEditView.btnRoleNew.text")); // NOI18N
        btnRoleNew.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel13.add(btnRoleNew, gridBagConstraints);

        btnRoleDelete.setAction(viewModel.getTdsRadiologistRoleAssignmentViewModel().getDeleteAction());
        btnRoleDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/delete.png"))); // NOI18N
        btnRoleDelete.setText(bundle.getString("RadiologistEditView.btnRoleDelete.text")); // NOI18N
        btnRoleDelete.setPreferredSize(new java.awt.Dimension(120, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel13.add(btnRoleDelete, gridBagConstraints);

        btnRoleEdit.setAction(viewModel.getTdsRadiologistRoleAssignmentViewModel().getEditAction());
        btnRoleEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnRoleEdit.setText(bundle.getString("RadiologistEditView.btnRoleEdit.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel13.add(btnRoleEdit, gridBagConstraints);

        jPanel12.add(jPanel13, java.awt.BorderLayout.PAGE_END);

        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel15.setLayout(new java.awt.GridBagLayout());

        btnRoleSave.setAction(viewModel.getTdsRadiologistRoleAssignmentViewModel().getSaveAction());
        btnRoleSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnRoleSave.setText(bundle.getString("RadiologistEditView.btnRoleSave.text")); // NOI18N
        btnRoleSave.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel15.add(btnRoleSave, gridBagConstraints);

        btnRoleCancel.setAction(viewModel.getTdsRadiologistRoleAssignmentViewModel().getCancelAction());
        btnRoleCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnRoleCancel.setText(bundle.getString("RadiologistEditView.btnRoleCancel.text")); // NOI18N
        btnRoleCancel.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 10);
        jPanel15.add(btnRoleCancel, gridBagConstraints);

        jPanel14.add(jPanel15, java.awt.BorderLayout.LINE_END);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        roleAdded.setText(bundle.getString("RadiologistEditView.roleAdded.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(roleAdded, gridBagConstraints);

        txtRoleAdded.setEditable(false);
        txtRoleAdded.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(txtRoleAdded, gridBagConstraints);

        roleAssignmentStart.setText(bundle.getString("RadiologistEditView.roleAssignmentStart.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(roleAssignmentStart, gridBagConstraints);

        rolePlannedEnd.setText(bundle.getString("RadiologistEditView.rolePlannedEnd.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(rolePlannedEnd, gridBagConstraints);

        roleEnded.setText(bundle.getString("RadiologistEditView.roleEnded.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(roleEnded, gridBagConstraints);

        cmbRoleName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbRoleName.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(cmbRoleName, gridBagConstraints);

        jDateChooser1.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(jDateChooser1, gridBagConstraints);

        jDateChooser2.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(jDateChooser2, gridBagConstraints);

        roleName.setText(bundle.getString("RadiologistEditView.roleName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(roleName, gridBagConstraints);

        txtRoleEnded.setEditable(false);
        txtRoleEnded.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(txtRoleEnded, gridBagConstraints);

        jPanel14.add(jPanel18, java.awt.BorderLayout.CENTER);

        jPanel12.add(jPanel14, java.awt.BorderLayout.CENTER);

        pnlRole.add(jPanel12, java.awt.BorderLayout.PAGE_END);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.jPanel19.border.title"))); // NOI18N
        jPanel19.setLayout(new java.awt.BorderLayout());

        tblRole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(tblRole);

        jPanel19.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        pnlRole.add(jPanel19, java.awt.BorderLayout.CENTER);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlRole.TabConstraints.tabTitle"), pnlRole); // NOI18N

        pnlCompany.setLayout(new java.awt.BorderLayout());

        pnlCpList.setTitle(bundle.getString("RadiologistEditView.pnlCpList.title")); // NOI18N
        pnlCpList.getContentContainer().setLayout(new java.awt.BorderLayout());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.entityList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblCompanyAssignment);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company.name}"));
        columnBinding.setColumnName("Company.name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${started}"));
        columnBinding.setColumnName("Started");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ended}"));
        columnBinding.setColumnName("Ended");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${active}"));
        columnBinding.setColumnName("Active");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedEntity}"), tblCompanyAssignment, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.newButtonEnabled}"), tblCompanyAssignment, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane8.setViewportView(tblCompanyAssignment);
        tblCompanyAssignment.getColumnModel().getColumn(0).setMinWidth(30);
        tblCompanyAssignment.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblCompanyAssignment.getColumnModel().getColumn(0).setMaxWidth(30);
        tblCompanyAssignment.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblCompanyAssignment.columnModel.title0")); // NOI18N
        tblCompanyAssignment.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblCompanyAssignment.columnModel.title1")); // NOI18N
        tblCompanyAssignment.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblCompanyAssignment.columnModel.title2")); // NOI18N
        tblCompanyAssignment.getColumnModel().getColumn(2).setCellRenderer(new DateTimeTableCellRenderer());
        tblCompanyAssignment.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblCompanyAssignment.columnModel.title3")); // NOI18N
        tblCompanyAssignment.getColumnModel().getColumn(3).setCellRenderer(new DateTimeTableCellRenderer());
        tblCompanyAssignment.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblCompanyAssignment.columnModel.title4")); // NOI18N

        pnlCpList.getContentContainer().add(jScrollPane8, java.awt.BorderLayout.CENTER);

        pnlCompany.add(pnlCpList, java.awt.BorderLayout.CENTER);

        pnlCpDetail.setPreferredSize(new java.awt.Dimension(981, 200));
        pnlCpDetail.setLayout(new java.awt.GridLayout(1, 0, 1, 0));

        jXTitledPanel5.setTitle(bundle.getString("RadiologistEditView.jXTitledPanel5.title")); // NOI18N
        jXTitledPanel5.getContentContainer().setLayout(new java.awt.BorderLayout());

        jPanel20.setPreferredSize(new java.awt.Dimension(486, 30));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        btnCaNew.setAction(viewModel.getCompanyAssignmentViewModel().getNewAction());
        btnCaNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnCaNew.setText(bundle.getString("RadiologistEditView.btnCaNew.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.newButtonEnabled}"), btnCaNew, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel20.add(btnCaNew, new java.awt.GridBagConstraints());

        btnCaDelete.setAction(viewModel.getCompanyAssignmentViewModel().getDeleteAction());
        btnCaDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/delete.png"))); // NOI18N
        btnCaDelete.setText(bundle.getString("RadiologistEditView.btnCaDelete.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.deleteButtonEnabled}"), btnCaDelete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel20.add(btnCaDelete, new java.awt.GridBagConstraints());

        btnCaEdit.setAction(viewModel.getCompanyAssignmentViewModel().getEditAction());
        btnCaEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnCaEdit.setText(bundle.getString("RadiologistEditView.btnCaEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.editButtonEnabled}"), btnCaEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel20.add(btnCaEdit, new java.awt.GridBagConstraints());

        jXTitledPanel5.getContentContainer().add(jPanel20, java.awt.BorderLayout.PAGE_END);

        jPanel21.setLayout(new java.awt.BorderLayout());

        jPanel22.setLayout(new java.awt.GridBagLayout());

        btnCaSave.setAction(viewModel.getCompanyAssignmentViewModel().getSaveAction());
        btnCaSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnCaSave.setText(bundle.getString("RadiologistEditView.btnCaSave.text")); // NOI18N
        btnCaSave.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.saveButtonEnabled}"), btnCaSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel22.add(btnCaSave, new java.awt.GridBagConstraints());

        btnCaCancel.setAction(viewModel.getCompanyAssignmentViewModel().getCancelAction());
        btnCaCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnCaCancel.setText(bundle.getString("RadiologistEditView.btnCaCancel.text")); // NOI18N
        btnCaCancel.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.cancelButtonEnabled}"), btnCaCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel22.add(btnCaCancel, gridBagConstraints);

        jPanel21.add(jPanel22, java.awt.BorderLayout.LINE_END);

        jPanel23.setLayout(new java.awt.GridBagLayout());

        caStarted.setText(bundle.getString("RadiologistEditView.caStarted.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel23.add(caStarted, gridBagConstraints);

        dtpCaStarted.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedEntity.started}"), dtpCaStarted, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.saveButtonEnabled}"), dtpCaStarted, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel23.add(dtpCaStarted, gridBagConstraints);

        caEnded.setText(bundle.getString("RadiologistEditView.caEnded.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel23.add(caEnded, gridBagConstraints);

        dtpCaEnded.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedEntity.ended}"), dtpCaEnded, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.saveButtonEnabled}"), dtpCaEnded, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel23.add(dtpCaEnded, gridBagConstraints);

        cbCaActive.setText(bundle.getString("RadiologistEditView.cbCaActive.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedEntity.active}"), cbCaActive, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.saveButtonEnabled}"), cbCaActive, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel23.add(cbCaActive, gridBagConstraints);

        caCompany.setText(bundle.getString("RadiologistEditView.caCompany.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel23.add(caCompany, gridBagConstraints);

        cmbCaCompany.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCaCompany.setPreferredSize(new java.awt.Dimension(150, 20));
        cmbCaCompany.setRenderer(new TDSListCellRenderer());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cmbCaCompany);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedEntity.company}"), cmbCaCompany, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.modeHandler.saveButtonEnabled}"), cmbCaCompany, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel23.add(cmbCaCompany, gridBagConstraints);

        jPanel21.add(jPanel23, java.awt.BorderLayout.CENTER);

        jXTitledPanel5.getContentContainer().add(jPanel21, java.awt.BorderLayout.CENTER);

        pnlCpDetail.add(jXTitledPanel5);

        jXTitledPanel6.setTitle(bundle.getString("RadiologistEditView.jXTitledPanel6.title")); // NOI18N
        jXTitledPanel6.getContentContainer().setLayout(new java.awt.BorderLayout());

        jPanel24.setPreferredSize(new java.awt.Dimension(493, 30));
        jPanel24.setLayout(new java.awt.GridBagLayout());

        btnCpNew.setAction(viewModel.getCompanyAssignmentViewModel().getNewCompanyAction());
        btnCpNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnCpNew.setText(bundle.getString("RadiologistEditView.btnCpNew.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.newButtonEnabled}"), btnCpNew, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel24.add(btnCpNew, new java.awt.GridBagConstraints());

        btnCpEdit.setAction(viewModel.getCompanyAssignmentViewModel().getEditCompanyAction());
        btnCpEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnCpEdit.setText(bundle.getString("RadiologistEditView.btnCpEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.editButtonEnabled}"), btnCpEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel24.add(btnCpEdit, new java.awt.GridBagConstraints());

        jXTitledPanel6.getContentContainer().add(jPanel24, java.awt.BorderLayout.PAGE_END);

        jPanel25.setLayout(new java.awt.BorderLayout());

        jPanel26.setLayout(new java.awt.GridBagLayout());

        btnCpSave.setAction(viewModel.getCompanyAssignmentViewModel().getSaveCompanyAction());
        btnCpSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnCpSave.setText(bundle.getString("RadiologistEditView.btnCpSave.text")); // NOI18N
        btnCpSave.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.saveButtonEnabled}"), btnCpSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel26.add(btnCpSave, new java.awt.GridBagConstraints());

        btnCpCancel.setAction(viewModel.getCompanyAssignmentViewModel().getCancelCompanyAction());
        btnCpCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnCpCancel.setText(bundle.getString("RadiologistEditView.btnCpCancel.text")); // NOI18N
        btnCpCancel.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.cancelButtonEnabled}"), btnCpCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel26.add(btnCpCancel, gridBagConstraints);

        jPanel25.add(jPanel26, java.awt.BorderLayout.LINE_END);

        jPanel27.setLayout(new java.awt.GridBagLayout());

        caName.setText(bundle.getString("RadiologistEditView.caName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(caName, gridBagConstraints);

        txtCaName.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedCompany.name}"), txtCaName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.saveButtonEnabled}"), txtCaName, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(txtCaName, gridBagConstraints);

        caAccountNumber.setText(bundle.getString("RadiologistEditView.caAccountNumber.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(caAccountNumber, gridBagConstraints);

        txtCaAccountNumber.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedCompany.accountNumber}"), txtCaAccountNumber, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.saveButtonEnabled}"), txtCaAccountNumber, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(txtCaAccountNumber, gridBagConstraints);

        caAddress.setText(bundle.getString("RadiologistEditView.caAddress.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(caAddress, gridBagConstraints);

        txtCaAddress.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedCompany.address}"), txtCaAddress, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.saveButtonEnabled}"), txtCaAddress, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(txtCaAddress, gridBagConstraints);

        caTaxAuthorityNumber.setText(bundle.getString("RadiologistEditView.caTaxAuthorityNumber.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(caTaxAuthorityNumber, gridBagConstraints);

        txtCaTaxAuthorityNumber.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedCompany.taxAuthorityNumber}"), txtCaTaxAuthorityNumber, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.saveButtonEnabled}"), txtCaTaxAuthorityNumber, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(txtCaTaxAuthorityNumber, gridBagConstraints);

        caCountry.setText(bundle.getString("RadiologistEditView.caCountry.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(caCountry, gridBagConstraints);

        caCmbCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        caCmbCountry.setPreferredSize(new java.awt.Dimension(200, 20));
        caCmbCountry.setRenderer(new TDSListCellRenderer());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.countryList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, caCmbCountry);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.selectedCompany.country}"), caCmbCountry, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.companyAssignmentViewModel.companyModeHandler.saveButtonEnabled}"), caCmbCountry, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel27.add(caCmbCountry, gridBagConstraints);

        jPanel25.add(jPanel27, java.awt.BorderLayout.CENTER);

        jXTitledPanel6.getContentContainer().add(jPanel25, java.awt.BorderLayout.CENTER);

        pnlCpDetail.add(jXTitledPanel6);

        pnlCompany.add(pnlCpDetail, java.awt.BorderLayout.PAGE_END);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlCompany.TabConstraints.tabTitle"), pnlCompany); // NOI18N

        pnlWorkPlace.setLayout(new java.awt.BorderLayout());

        pnlWpList.setTitle(bundle.getString("RadiologistEditView.pnlWpList.title")); // NOI18N
        pnlWpList.getContentContainer().setLayout(new java.awt.BorderLayout());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.entityList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblWorkplace);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${hospital.officialName}"));
        columnBinding.setColumnName("Hospital.official Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fromDate}"));
        columnBinding.setColumnName("From Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${toDate}"));
        columnBinding.setColumnName("To Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${added}"));
        columnBinding.setColumnName("Added");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedEntity}"), tblWorkplace, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane9.setViewportView(tblWorkplace);
        tblWorkplace.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("RadiologistEditView.tblWorkplace.columnModel.title0")); // NOI18N
        tblWorkplace.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("RadiologistEditView.tblWorkplace.columnModel.title1")); // NOI18N
        tblWorkplace.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("RadiologistEditView.tblWorkplace.columnModel.title2")); // NOI18N
        tblWorkplace.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("RadiologistEditView.tblWorkplace.columnModel.title3")); // NOI18N
        tblWorkplace.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("RadiologistEditView.tblWorkplace.columnModel.title4")); // NOI18N
        tblWorkplace.getColumnModel().getColumn(4).setCellRenderer(new DateTimeTableCellRenderer());

        pnlWpList.getContentContainer().add(jScrollPane9, java.awt.BorderLayout.CENTER);

        pnlWorkPlace.add(pnlWpList, java.awt.BorderLayout.CENTER);

        pnlCpDetail1.setPreferredSize(new java.awt.Dimension(981, 200));
        pnlCpDetail1.setLayout(new java.awt.GridLayout(1, 0, 1, 0));

        jXTitledPanel7.setTitle(bundle.getString("RadiologistEditView.jXTitledPanel7.title")); // NOI18N
        jXTitledPanel7.getContentContainer().setLayout(new java.awt.BorderLayout());

        jPanel28.setPreferredSize(new java.awt.Dimension(486, 30));
        jPanel28.setLayout(new java.awt.GridBagLayout());

        btnWpNew.setAction(viewModel.getWorkplaceViewModel().getNewAction());
        btnWpNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/new.png"))); // NOI18N
        btnWpNew.setText(bundle.getString("RadiologistEditView.btnWpNew.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.newButtonEnabled}"), btnWpNew, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel28.add(btnWpNew, new java.awt.GridBagConstraints());

        btnWpDelete.setAction(viewModel.getWorkplaceViewModel().getDeleteAction());
        btnWpDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/delete.png"))); // NOI18N
        btnWpDelete.setText(bundle.getString("RadiologistEditView.btnWpDelete.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.deleteButtonEnabled}"), btnWpDelete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel28.add(btnWpDelete, new java.awt.GridBagConstraints());

        btnWpEdit.setAction(viewModel.getWorkplaceViewModel().getEditAction());
        btnWpEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnWpEdit.setText(bundle.getString("RadiologistEditView.btnWpEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.editButtonEnabled}"), btnWpEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel28.add(btnWpEdit, new java.awt.GridBagConstraints());

        jXTitledPanel7.getContentContainer().add(jPanel28, java.awt.BorderLayout.PAGE_END);

        jPanel29.setLayout(new java.awt.BorderLayout());

        jPanel30.setLayout(new java.awt.GridBagLayout());

        btnWpSave.setAction(viewModel.getWorkplaceViewModel().getSaveAction());
        btnWpSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnWpSave.setText(bundle.getString("RadiologistEditView.btnWpSave.text")); // NOI18N
        btnWpSave.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.saveButtonEnabled}"), btnWpSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel30.add(btnWpSave, new java.awt.GridBagConstraints());

        btnWpCancel.setAction(viewModel.getWorkplaceViewModel().getCancelAction());
        btnWpCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnWpCancel.setText(bundle.getString("RadiologistEditView.btnWpCancel.text")); // NOI18N
        btnWpCancel.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.cancelButtonEnabled}"), btnWpCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel30.add(btnWpCancel, gridBagConstraints);

        jPanel29.add(jPanel30, java.awt.BorderLayout.LINE_END);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        wpFromDate.setText(bundle.getString("RadiologistEditView.wpFromDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel31.add(wpFromDate, gridBagConstraints);

        dtpWpFromDate.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedEntity.fromDate}"), dtpWpFromDate, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.saveButtonEnabled}"), dtpWpFromDate, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel31.add(dtpWpFromDate, gridBagConstraints);

        wpToDate.setText(bundle.getString("RadiologistEditView.wpToDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel31.add(wpToDate, gridBagConstraints);

        dtpWpToDate.setPreferredSize(new java.awt.Dimension(150, 22));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedEntity.toDate}"), dtpWpToDate, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.saveButtonEnabled}"), dtpWpToDate, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel31.add(dtpWpToDate, gridBagConstraints);

        wpHospital.setText(bundle.getString("RadiologistEditView.wpHospital.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel31.add(wpHospital, gridBagConstraints);

        cmbWpHospital.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbWpHospital.setPreferredSize(new java.awt.Dimension(150, 20));
        cmbWpHospital.setRenderer(new TDSListCellRenderer());

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cmbWpHospital);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedEntity.hospital}"), cmbWpHospital, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.modeHandler.saveButtonEnabled}"), cmbWpHospital, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel31.add(cmbWpHospital, gridBagConstraints);

        jPanel29.add(jPanel31, java.awt.BorderLayout.CENTER);

        jXTitledPanel7.getContentContainer().add(jPanel29, java.awt.BorderLayout.CENTER);

        pnlCpDetail1.add(jXTitledPanel7);

        jXTitledPanel8.setTitle(bundle.getString("RadiologistEditView.jXTitledPanel8.title")); // NOI18N
        jXTitledPanel8.getContentContainer().setLayout(new java.awt.BorderLayout());

        jPanel32.setPreferredSize(new java.awt.Dimension(493, 30));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        btnWpEditHospital.setAction(viewModel.getWorkplaceViewModel().getEditHospitalAction());
        btnWpEditHospital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnWpEditHospital.setText(bundle.getString("RadiologistEditView.btnWpEditHospital.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.editButtonEnabled}"), btnWpEditHospital, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel32.add(btnWpEditHospital, new java.awt.GridBagConstraints());

        jXTitledPanel8.getContentContainer().add(jPanel32, java.awt.BorderLayout.PAGE_END);

        jPanel33.setLayout(new java.awt.BorderLayout());

        jPanel34.setLayout(new java.awt.GridBagLayout());

        btnWpSaveHospital.setAction(viewModel.getWorkplaceViewModel().getSaveHospitalAction());
        btnWpSaveHospital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnWpSaveHospital.setText(bundle.getString("RadiologistEditView.btnWpSaveHospital.text")); // NOI18N
        btnWpSaveHospital.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.saveButtonEnabled}"), btnWpSaveHospital, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel34.add(btnWpSaveHospital, new java.awt.GridBagConstraints());

        btnWpCancelHospital.setAction(viewModel.getWorkplaceViewModel().getCancelHospitalAction());
        btnWpCancelHospital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnWpCancelHospital.setText(bundle.getString("RadiologistEditView.btnWpCancelHospital.text")); // NOI18N
        btnWpCancelHospital.setPreferredSize(new java.awt.Dimension(130, 23));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.cancelButtonEnabled}"), btnWpCancelHospital, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel34.add(btnWpCancelHospital, gridBagConstraints);

        jPanel33.add(jPanel34, java.awt.BorderLayout.LINE_END);

        jPanel35.setLayout(new java.awt.GridBagLayout());

        wpOfficialName.setText(bundle.getString("RadiologistEditView.wpOfficialName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(wpOfficialName, gridBagConstraints);

        txtWpOfficialName.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedHospital.officialName}"), txtWpOfficialName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.saveButtonEnabled}"), txtWpOfficialName, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(txtWpOfficialName, gridBagConstraints);

        wpGovBody.setText(bundle.getString("RadiologistEditView.wpGovBody.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(wpGovBody, gridBagConstraints);

        txtWpGovBody.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedHospital.govBody}"), txtWpGovBody, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.saveButtonEnabled}"), txtWpGovBody, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(txtWpGovBody, gridBagConstraints);

        wpShortName.setText(bundle.getString("RadiologistEditView.wpShortName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(wpShortName, gridBagConstraints);

        txtWpShortName.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedHospital.shortName}"), txtWpShortName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.saveButtonEnabled}"), txtWpShortName, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(txtWpShortName, gridBagConstraints);

        caWpAddress.setText(bundle.getString("RadiologistEditView.caWpAddress.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(caWpAddress, gridBagConstraints);

        txtWpAddress.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedHospital.address}"), txtWpAddress, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.saveButtonEnabled}"), txtWpAddress, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(txtWpAddress, gridBagConstraints);

        wpRegion.setText(bundle.getString("RadiologistEditView.wpRegion.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(wpRegion, gridBagConstraints);

        txtWpRegion.setPreferredSize(new java.awt.Dimension(200, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.selectedHospital.region.name}"), txtWpRegion, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.workplaceViewModel.hospitalModeHandler.saveButtonEnabled}"), txtWpRegion, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel35.add(txtWpRegion, gridBagConstraints);

        jPanel33.add(jPanel35, java.awt.BorderLayout.CENTER);

        jXTitledPanel8.getContentContainer().add(jPanel33, java.awt.BorderLayout.CENTER);

        pnlCpDetail1.add(jXTitledPanel8);

        pnlWorkPlace.add(pnlCpDetail1, java.awt.BorderLayout.PAGE_END);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlWorkPlace.TabConstraints.tabTitle"), pnlWorkPlace); // NOI18N

        pnlCalendar.setTitle(bundle.getString("RadiologistEditView.pnlCalendar.title")); // NOI18N
        pnlCalendar.getContentContainer().setLayout(new java.awt.BorderLayout());

        jPanel17.setOpaque(false);
        jPanel17.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel17.add(jMonthChooser1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel17.add(jYearChooser1, gridBagConstraints);

        pnlCalendar.getContentContainer().add(jPanel17, java.awt.BorderLayout.PAGE_START);

        jPanel36.setPreferredSize(new java.awt.Dimension(287, 30));
        jPanel36.setLayout(new java.awt.GridBagLayout());

        btnCalEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnCalEdit.setText(bundle.getString("RadiologistEditView.btnCalEdit.text")); // NOI18N
        jPanel36.add(btnCalEdit, new java.awt.GridBagConstraints());

        btnCalSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnCalSave.setText(bundle.getString("RadiologistEditView.btnCalSave.text")); // NOI18N
        jPanel36.add(btnCalSave, new java.awt.GridBagConstraints());

        btnCalCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnCalCancel.setText(bundle.getString("RadiologistEditView.btnCalCancel.text")); // NOI18N
        jPanel36.add(btnCalCancel, new java.awt.GridBagConstraints());

        pnlCalendar.getContentContainer().add(jPanel36, java.awt.BorderLayout.PAGE_END);

        jPanel37.setOpaque(false);
        jPanel37.setLayout(new java.awt.BorderLayout());

        jPanel38.setOpaque(false);
        jPanel38.setLayout(new java.awt.GridLayout(1, 7, 0, 1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(bundle.getString("RadiologistEditView.jLabel2.text")); // NOI18N
        jPanel38.add(jLabel2);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(bundle.getString("RadiologistEditView.jLabel1.text")); // NOI18N
        jPanel38.add(jLabel1);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(bundle.getString("RadiologistEditView.jLabel3.text")); // NOI18N
        jPanel38.add(jLabel3);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(bundle.getString("RadiologistEditView.jLabel4.text")); // NOI18N
        jPanel38.add(jLabel4);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(bundle.getString("RadiologistEditView.jLabel5.text")); // NOI18N
        jPanel38.add(jLabel5);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(bundle.getString("RadiologistEditView.jLabel6.text")); // NOI18N
        jPanel38.add(jLabel6);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(bundle.getString("RadiologistEditView.jLabel7.text")); // NOI18N
        jPanel38.add(jLabel7);

        jPanel37.add(jPanel38, java.awt.BorderLayout.PAGE_START);

        jPanel39.setOpaque(false);
        jPanel39.setLayout(new java.awt.GridLayout(5, 7));

        dailyAvailabilityPanel1.setOpaque(false);
        jPanel39.add(dailyAvailabilityPanel1);
        jPanel39.add(dailyAvailabilityPanel2);
        jPanel39.add(dailyAvailabilityPanel7);
        jPanel39.add(dailyAvailabilityPanel3);
        jPanel39.add(dailyAvailabilityPanel13);
        jPanel39.add(dailyAvailabilityPanel4);
        jPanel39.add(dailyAvailabilityPanel5);
        jPanel39.add(dailyAvailabilityPanel6);
        jPanel39.add(dailyAvailabilityPanel8);
        jPanel39.add(dailyAvailabilityPanel14);
        jPanel39.add(dailyAvailabilityPanel9);
        jPanel39.add(dailyAvailabilityPanel10);
        jPanel39.add(dailyAvailabilityPanel12);
        jPanel39.add(dailyAvailabilityPanel11);
        jPanel39.add(dailyAvailabilityPanel15);
        jPanel39.add(dailyAvailabilityPanel19);
        jPanel39.add(dailyAvailabilityPanel18);
        jPanel39.add(dailyAvailabilityPanel17);
        jPanel39.add(dailyAvailabilityPanel16);
        jPanel39.add(dailyAvailabilityPanel20);
        jPanel39.add(dailyAvailabilityPanel21);
        jPanel39.add(dailyAvailabilityPanel22);
        jPanel39.add(dailyAvailabilityPanel23);
        jPanel39.add(dailyAvailabilityPanel25);
        jPanel39.add(dailyAvailabilityPanel24);
        jPanel39.add(dailyAvailabilityPanel26);
        jPanel39.add(dailyAvailabilityPanel27);
        jPanel39.add(dailyAvailabilityPanel28);
        jPanel39.add(dailyAvailabilityPanel29);
        jPanel39.add(dailyAvailabilityPanel31);
        jPanel39.add(dailyAvailabilityPanel30);
        jPanel39.add(dailyAvailabilityPanel32);
        jPanel39.add(dailyAvailabilityPanel33);
        jPanel39.add(dailyAvailabilityPanel34);
        jPanel39.add(dailyAvailabilityPanel35);

        jPanel37.add(jPanel39, java.awt.BorderLayout.CENTER);

        pnlCalendar.getContentContainer().add(jPanel37, java.awt.BorderLayout.CENTER);

        tbpRadiologist.addTab(bundle.getString("RadiologistEditView.pnlCalendar.TabConstraints.tabTitle"), pnlCalendar); // NOI18N

        getContentPane().add(tbpRadiologist, java.awt.BorderLayout.CENTER);

        pnlAction.setOpaque(false);
        pnlAction.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RadiologistEditView.pnlAction.border.title"))); // NOI18N
        pnlAction.setLayout(new java.awt.GridBagLayout());

        btnEdit.setAction(viewModel.getEditAction());
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/edit.png"))); // NOI18N
        btnEdit.setText(bundle.getString("RadiologistEditView.btnEdit.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.editButtonEnabled}"), btnEdit, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        pnlAction.add(btnEdit, gridBagConstraints);

        btnSave.setAction(viewModel.getSaveAction());
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/save.png"))); // NOI18N
        btnSave.setText(bundle.getString("RadiologistEditView.btnSave.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.saveButtonEnabled}"), btnSave, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        pnlAction.add(btnSave, gridBagConstraints);

        btnCancel.setAction(viewModel.getCancelAction());
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/cancel.png"))); // NOI18N
        btnCancel.setText(bundle.getString("RadiologistEditView.btnCancel.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.modeHandler.cancelButtonEnabled}"), btnCancel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        pnlAction.add(btnCancel, gridBagConstraints);

        getContentPane().add(pnlAction, java.awt.BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlRadCompetenceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnlRadCompetenceFocusGained
    }//GEN-LAST:event_pnlRadCompetenceFocusGained

    private void tbpRadiologistStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbpRadiologistStateChanged
        JTabbedPane pane = (JTabbedPane) evt.getSource();
        int sel = pane.getSelectedIndex();
        if (pnlAction.getBorder() == null) return;
        System.out.println(pnlAction.getBorder());
        if (sel == 0 || sel == 1) {
            ((TitledBorder) pnlAction.getBorder()).setTitleColor(Color.black);
        } else {
            ((TitledBorder) pnlAction.getBorder()).setTitleColor(Color.lightGray);
        }
        pnlAction.repaint();

    }//GEN-LAST:event_tbpRadiologistStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountNumber;
    private javax.swing.JLabel added;
    private javax.swing.JLabel addingDateTime;
    private javax.swing.JButton btnCaCancel;
    private javax.swing.JButton btnCaDelete;
    private javax.swing.JButton btnCaEdit;
    private javax.swing.JButton btnCaNew;
    private javax.swing.JButton btnCaSave;
    private javax.swing.JButton btnCalCancel;
    private javax.swing.JButton btnCalEdit;
    private javax.swing.JButton btnCalSave;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCpCancel;
    private javax.swing.JButton btnCpEdit;
    private javax.swing.JButton btnCpNew;
    private javax.swing.JButton btnCpSave;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRaCancel;
    private javax.swing.JButton btnRaDelete;
    private javax.swing.JButton btnRaEdit;
    private javax.swing.JButton btnRaNew;
    private javax.swing.JButton btnRaSave;
    private javax.swing.JButton btnRcCancel;
    private javax.swing.JButton btnRcEdit;
    private javax.swing.JButton btnRcSave;
    private javax.swing.JButton btnRlqoCancel;
    private javax.swing.JButton btnRlqoDelete;
    private javax.swing.JButton btnRlqoEdit;
    private javax.swing.JButton btnRlqoNew;
    private javax.swing.JButton btnRlqoSave;
    private javax.swing.JButton btnRoleCancel;
    private javax.swing.JButton btnRoleDelete;
    private javax.swing.JButton btnRoleEdit;
    private javax.swing.JButton btnRoleNew;
    private javax.swing.JButton btnRoleSave;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSuCancel;
    private javax.swing.JButton btnSuDelete;
    private javax.swing.JButton btnSuEdit;
    private javax.swing.JButton btnSuNew;
    private javax.swing.JButton btnSuSave;
    private javax.swing.JButton btnWpCancel;
    private javax.swing.JButton btnWpCancelHospital;
    private javax.swing.JButton btnWpDelete;
    private javax.swing.JButton btnWpEdit;
    private javax.swing.JButton btnWpEditHospital;
    private javax.swing.JButton btnWpNew;
    private javax.swing.JButton btnWpSave;
    private javax.swing.JButton btnWpSaveHospital;
    private javax.swing.JLabel caAccountNumber;
    private javax.swing.JLabel caAddress;
    private javax.swing.JComboBox caCmbCountry;
    private javax.swing.JLabel caCompany;
    private javax.swing.JLabel caCountry;
    private javax.swing.JLabel caEnded;
    private javax.swing.JLabel caName;
    private javax.swing.JLabel caStarted;
    private javax.swing.JLabel caTaxAuthorityNumber;
    private javax.swing.JLabel caWpAddress;
    private javax.swing.JCheckBox cbCaActive;
    private javax.swing.JCheckBox cbxConfirmedByPM;
    private javax.swing.JCheckBox cbxConfirmedByRad;
    private javax.swing.JCheckBox cbxValid;
    private javax.swing.JCheckBox chIinProbation;
    private javax.swing.JCheckBox chbActive;
    private javax.swing.JCheckBox chbEnglishAllowed;
    private javax.swing.JCheckBox chbGetsSystemEmails;
    private javax.swing.JCheckBox chbRlqoActive;
    private javax.swing.JComboBox cmbCaCompany;
    private javax.swing.JComboBox cmbRlcqRegLicQual;
    private javax.swing.JComboBox cmbRoleName;
    private javax.swing.JComboBox cmbSex;
    private javax.swing.JComboBox cmbSuSupervised;
    private javax.swing.JComboBox cmbWpHospital;
    private javax.swing.JLabel creditValidity;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel1;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel10;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel11;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel12;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel13;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel14;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel15;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel16;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel17;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel18;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel19;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel2;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel20;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel21;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel22;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel23;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel24;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel25;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel26;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel27;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel28;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel29;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel3;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel30;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel31;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel32;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel33;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel34;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel35;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel4;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel5;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel6;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel7;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel8;
    private commonmodule.view.DailyAvailabilityPanel dailyAvailabilityPanel9;
    private javax.swing.JLabel defaultMaxAvailabilityHrsPerWeekDay;
    private javax.swing.JLabel defaultMaxAvailabilityHrsPerWeekendDay;
    private javax.swing.JLabel defaultNormalAvailabilityHrsPerWeekDay;
    private javax.swing.JLabel defaultNormalAvailabilityHrsPerWeekendDay;
    private com.toedter.calendar.JDateChooser dtcRlqoValidBegin;
    private com.toedter.calendar.JDateChooser dtcRlqoValidEnd;
    private org.jdesktop.swingx.JXDatePicker dtpCaEnded;
    private org.jdesktop.swingx.JXDatePicker dtpCaStarted;
    private org.jdesktop.swingx.JXDatePicker dtpSuEnded;
    private org.jdesktop.swingx.JXDatePicker dtpSuStarted;
    private org.jdesktop.swingx.JXDatePicker dtpWpFromDate;
    private org.jdesktop.swingx.JXDatePicker dtpWpToDate;
    private javax.swing.JLabel englishLanguageCompetence;
    private javax.swing.JLabel englishSalaryRate;
    private javax.swing.JLabel from;
    private javax.swing.JLabel hungarianLanguageCompetence;
    private javax.swing.JLabel hungarianSalaryRate;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel5;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel6;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel7;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel8;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JLabel lastCheck;
    private javax.swing.JLabel loginName;
    private javax.swing.JLabel maxAvailability;
    private javax.swing.JLabel msn;
    private javax.swing.JLabel name;
    private javax.swing.JLabel normalAvailability;
    private javax.swing.JLabel password;
    private javax.swing.JLabel placeOfFax;
    private javax.swing.JPanel pnlAction;
    private javax.swing.JPanel pnlBaseData;
    private org.jdesktop.swingx.JXTitledPanel pnlCalendar;
    private javax.swing.JPanel pnlCompany;
    private javax.swing.JPanel pnlCpDetail;
    private javax.swing.JPanel pnlCpDetail1;
    private org.jdesktop.swingx.JXTitledPanel pnlCpList;
    private javax.swing.JPanel pnlRaAction;
    private org.jdesktop.swingx.JXTitledPanel pnlRaDetail;
    private javax.swing.JPanel pnlRaEdit;
    private org.jdesktop.swingx.JXTitledPanel pnlRaList;
    private javax.swing.JPanel pnlRadAvailability;
    private javax.swing.JPanel pnlRadCompetence;
    private javax.swing.JPanel pnlRcAction;
    private javax.swing.JPanel pnlRegLicQualOwnership;
    private javax.swing.JPanel pnlRlqoAction;
    private javax.swing.JPanel pnlRlqoEdit;
    private javax.swing.JPanel pnlRlqoList;
    private javax.swing.JPanel pnlRole;
    private javax.swing.JPanel pnlSuAction;
    private javax.swing.JPanel pnlSuEdit;
    private javax.swing.JPanel pnlSupervised;
    private javax.swing.JPanel pnlUserInfo;
    private javax.swing.JPanel pnlWorkPlace;
    private org.jdesktop.swingx.JXTitledPanel pnlWpList;
    private javax.swing.JPasswordField pwfPassword;
    private javax.swing.JLabel radInvoiceClosingDay;
    private javax.swing.JLabel radPaymentDay;
    private javax.swing.JLabel reportSendingCode;
    private javax.swing.JLabel rlcoCertificateNumber;
    private javax.swing.JLabel rlqoRegLicQual;
    private javax.swing.JLabel rlqoValidBegin;
    private javax.swing.JLabel rlqoValidEnd;
    private javax.swing.JLabel roleAdded;
    private javax.swing.JLabel roleAssignmentStart;
    private javax.swing.JLabel roleEnded;
    private javax.swing.JLabel roleName;
    private javax.swing.JLabel rolePlannedEnd;
    private javax.swing.JLabel sex;
    private javax.swing.JLabel skype;
    private javax.swing.JSpinner spnDefaultMaxAvailabilityHrsPerWeekDay;
    private javax.swing.JSpinner spnDefaultMaxAvailabilityHrsPerWeekendDay;
    private javax.swing.JSpinner spnDefaultNormalAvailabilityHrsPerWeekDay;
    private javax.swing.JSpinner spnDefaultNormalAvailabilityHrsPerWeekendDay;
    private javax.swing.JSpinner spnEnglishLanguageCompetence;
    private javax.swing.JSpinner spnHungarianLanguageCompetence;
    private javax.swing.JSpinner spnRadInvoiceClosingDay;
    private javax.swing.JSpinner spnRadPaymentDay;
    private javax.swing.JSpinner spnWorkDemandPriority;
    private javax.swing.JLabel suAdded;
    private javax.swing.JLabel suEnded;
    private javax.swing.JLabel suStarted;
    private javax.swing.JLabel suSupervised;
    private org.jdesktop.swingx.JXTable tblCompanyAssignment;
    private org.jdesktop.swingx.JXTable tblMaxAvailabilityPerWeek;
    private org.jdesktop.swingx.JXTable tblNormalAvailabilityPerWeek;
    private org.jdesktop.swingx.JXTable tblRadAvailability;
    private javax.swing.JTable tblRadCompetences;
    private javax.swing.JTable tblRegLicQualOwnership;
    private javax.swing.JTable tblRole;
    private org.jdesktop.swingx.JXTable tblSuperVision;
    private org.jdesktop.swingx.JXTable tblWorkplace;
    private javax.swing.JTabbedPane tbpRadiologist;
    private javax.swing.JLabel tdsEmail;
    private javax.swing.JLabel to;
    private org.jdesktop.swingx.JXTitledPanel tpSuDetail;
    private org.jdesktop.swingx.JXTitledPanel tpSuList;
    private javax.swing.JTextField txtAccountNumber;
    private javax.swing.JFormattedTextField txtAddingDateTime;
    private javax.swing.JTextField txtCaAccountNumber;
    private javax.swing.JTextField txtCaAddress;
    private javax.swing.JTextField txtCaName;
    private javax.swing.JTextField txtCaTaxAuthorityNumber;
    private javax.swing.JFormattedTextField txtEnglishSalaryRate;
    private javax.swing.JFormattedTextField txtHungarianSalaryRate;
    private javax.swing.JTextField txtLoginName;
    private javax.swing.JTextField txtMsn;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPlaceOfFax;
    private javax.swing.JTextField txtReportSendigCode;
    private javax.swing.JTextField txtRlqoCertificateNumber;
    private javax.swing.JTextField txtRoleAdded;
    private javax.swing.JTextField txtRoleEnded;
    private javax.swing.JTextField txtSkype;
    private org.jdesktop.swingx.JXTextField txtSuAdded;
    private javax.swing.JTextField txtTDSEmail;
    private javax.swing.JTextField txtWorkEmail;
    private javax.swing.JTextField txtWorkFax;
    private javax.swing.JTextField txtWorkTel;
    private javax.swing.JTextField txtWpAddress;
    private javax.swing.JTextField txtWpGovBody;
    private javax.swing.JTextField txtWpOfficialName;
    private javax.swing.JTextField txtWpRegion;
    private javax.swing.JTextField txtWpShortName;
    private javax.swing.JLabel workDemandPriority;
    private javax.swing.JLabel workEmail;
    private javax.swing.JLabel workFax;
    private javax.swing.JLabel workTel;
    private javax.swing.JLabel wpFromDate;
    private javax.swing.JLabel wpGovBody;
    private javax.swing.JLabel wpHospital;
    private javax.swing.JLabel wpOfficialName;
    private javax.swing.JLabel wpRegion;
    private javax.swing.JLabel wpShortName;
    private javax.swing.JLabel wpToDate;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void setTableSelectionIndex(int index) {
        if (!viewModel.getRadCompetenceViewModel().getEntityList().isEmpty()) {
            tblRadCompetences.getSelectionModel().setSelectionInterval(index, index);
        }
        if (!viewModel.getRegLicQualOwnershipViewModel().getEntityList().isEmpty()) {
            tblRegLicQualOwnership.getSelectionModel().setSelectionInterval(index, index);
        }
        if (!viewModel.getTdsRadiologistRoleAssignmentViewModel().getEntityList().isEmpty()) {
            tblRole.getSelectionModel().setSelectionInterval(index, index);
        }
        if (!viewModel.getSuperVisionViewModel().getEntityList().isEmpty()) {
            tblSuperVision.getSelectionModel().setSelectionInterval(index, index);
        }
        if (!viewModel.getCompanyAssignmentViewModel().getEntityList().isEmpty()) {
            tblCompanyAssignment.getSelectionModel().setSelectionInterval(index, index);
        }
        if (!viewModel.getWorkplaceViewModel().getEntityList().isEmpty()) {
            tblWorkplace.getSelectionModel().setSelectionInterval(index, index);
        }
        if (!viewModel.getRadAvailabilityViewModel().getEntityList().isEmpty()) {
            tblRadAvailability.getSelectionModel().setSelectionInterval(index, index);
        }
    }

    public void setTableSelectionIndex(int index, Class entityClass) {
        if (entityClass == RadCompetenceDTO.class) {
            tblRadCompetences.getSelectionModel().setSelectionInterval(index, index);
        } else if (entityClass == RegLicQualOwnershipDTO.class) {
            tblRegLicQualOwnership.getSelectionModel().setSelectionInterval(index, index);
        } else if (entityClass == TDSRadiologistRoleAssignmentDTO.class) {
            tblRole.getSelectionModel().setSelectionInterval(index, index);
        } else if (entityClass == SuperVisionDTO.class) {
            tblSuperVision.getSelectionModel().setSelectionInterval(index, index);
        } else if (entityClass == CompanyAssignmentDTO.class) {
            tblCompanyAssignment.getSelectionModel().setSelectionInterval(index, index);
        } else if (entityClass == WorkPlaceDTO.class) {
            tblWorkplace.getSelectionModel().setSelectionInterval(index, index);
        } else if (entityClass == RadAvailabilityDTO.class) {
            //tblRadAvailability.getSelectionModel().setSelectionInterval(index, index);
        }
    }

    public void newEntity(Class entityClass) {
        if (entityClass == RadCompetenceDTO.class) {
            btnRcSave.setVisible(true);
            btnRcCancel.setVisible(true);
        } else if (entityClass == RegLicQualOwnershipDTO.class) {
            btnRlqoSave.setVisible(true);
            btnRlqoCancel.setVisible(true);
            btnRlqoEdit.setVisible(false);
        } else if (entityClass == TDSRadiologistRoleAssignmentDTO.class) {
            btnRoleSave.setVisible(true);
            btnRoleCancel.setVisible(true);
        } else if (entityClass == SuperVisionDTO.class) {
            btnSuSave.setVisible(true);
            btnSuCancel.setVisible(true);
            cmbSuSupervised.setSelectedItem(null);
            tblSuperVision.clearSelection();
            dtpSuEnded.setDate(null);
            dtpSuStarted.setDate(null);
            txtSuAdded.setText("");
        } else if (entityClass == CompanyAssignmentDTO.class) {
            btnCaSave.setVisible(true);
            btnCaCancel.setVisible(true);
            tblCompanyAssignment.clearSelection();
            dtpCaEnded.setDate(null);
            dtpCaStarted.setDate(null);
            cbCaActive.setSelected(false);
            cmbCaCompany.setSelectedIndex(0);
        } else if (entityClass == CompanyDTO.class) {
            btnCpSave.setVisible(true);
            btnCpCancel.setVisible(true);
            //caCmbCountry.setSelectedItem(null);
//            txtCaName.setText("");
//            txtCaAddress.setText("");
//            txtCaTaxAuthorityNumber.setText("");
//            txtCaAccountNumber.setText("");
        } else if (entityClass == WorkPlaceDTO.class) {
            btnWpSave.setVisible(true);
            btnWpCancel.setVisible(true);
            tblWorkplace.clearSelection();
            dtpWpFromDate.setDate(null);
            dtpWpToDate.setDate(null);
            cmbWpHospital.setSelectedIndex(0);
        } else if (entityClass == RadAvailabilityDTO.class) {
            btnRaSave.setVisible(true);
            btnRaCancel.setVisible(true);
            tblRadAvailability.clearSelection();
        }
    }

    public void editEntity(Class entityClass) {
        if (entityClass == RadCompetenceDTO.class) {
            btnRcSave.setVisible(true);
            btnRcCancel.setVisible(true);
        } else if (entityClass == RegLicQualOwnershipDTO.class) {
            btnRlqoSave.setVisible(true);
            btnRlqoCancel.setVisible(true);
            btnRlqoEdit.setVisible(false);
        } else if (entityClass == TDSRadiologistRoleAssignmentDTO.class) {
            btnRoleSave.setVisible(true);
            btnRoleCancel.setVisible(true);
        } else if (entityClass == SuperVisionDTO.class) {
            btnSuSave.setVisible(true);
            btnSuCancel.setVisible(true);
        } else if (entityClass == CompanyAssignmentDTO.class) {
            btnCaSave.setVisible(true);
            btnCaCancel.setVisible(true);
        } else if (entityClass == CompanyDTO.class) {
            btnCpSave.setVisible(true);
            btnCpCancel.setVisible(true);
        } else if (entityClass == WorkPlaceDTO.class) {
            btnWpSave.setVisible(true);
            btnWpCancel.setVisible(true);
        } else if (entityClass == RadAvailabilityDTO.class) {
            btnRaSave.setVisible(true);
            btnRaCancel.setVisible(true);
        }
    }

    public void saveEntity(Class entityClass) {
        if (entityClass == RadCompetenceDTO.class) {
            btnRcSave.setVisible(false);
            btnRcCancel.setVisible(false);
        } else if (entityClass == RegLicQualOwnershipDTO.class) {
            btnRlqoSave.setVisible(false);
            btnRlqoCancel.setVisible(false);
            btnRlqoEdit.setVisible(true);
        } else if (entityClass == TDSRadiologistRoleAssignmentDTO.class) {
            btnRoleSave.setVisible(false);
            btnRoleCancel.setVisible(false);
        } else if (entityClass == SuperVisionDTO.class) {
            btnSuSave.setVisible(false);
            btnSuCancel.setVisible(false);
        } else if (entityClass == CompanyAssignmentDTO.class) {
            btnCaSave.setVisible(false);
            btnCaCancel.setVisible(false);
        } else if (entityClass == CompanyDTO.class) {
            btnCpSave.setVisible(false);
            btnCpCancel.setVisible(false);
        } else if (entityClass == WorkPlaceDTO.class) {
            btnWpSave.setVisible(false);
            btnWpCancel.setVisible(false);
        } else if (entityClass == RadAvailabilityDTO.class) {
            btnRaSave.setVisible(false);
            btnRaCancel.setVisible(false);
        }
    }

    public void cancelEntity(Class entityClass) {
        if (entityClass == RadCompetenceDTO.class) {
            btnRcSave.setVisible(false);
            btnRcCancel.setVisible(false);
        } else if (entityClass == RegLicQualOwnershipDTO.class) {
            btnRlqoSave.setVisible(false);
            btnRlqoCancel.setVisible(false);
            btnRlqoEdit.setVisible(true);
        } else if (entityClass == TDSRadiologistRoleAssignmentDTO.class) {
            btnRoleSave.setVisible(false);
            btnRoleCancel.setVisible(false);
        } else if (entityClass == SuperVisionDTO.class) {
            btnSuSave.setVisible(false);
            btnSuCancel.setVisible(false);
        } else if (entityClass == CompanyAssignmentDTO.class) {
            btnCaSave.setVisible(false);
            btnCaCancel.setVisible(false);
        } else if (entityClass == CompanyDTO.class) {
            btnCpSave.setVisible(false);
            btnCpCancel.setVisible(false);
        } else if (entityClass == WorkPlaceDTO.class) {
            btnWpSave.setVisible(false);
            btnWpCancel.setVisible(false);
        } else if (entityClass == RadAvailabilityDTO.class) {
            btnRaSave.setVisible(false);
            btnRaCancel.setVisible(false);
        }
    }

    public Object getEntity(Class entityClass) throws ConstraintException {
        Object dto = null;
        if (entityClass == RadCompetenceDTO.class) {
//            RadCompetenceDTO radCompetenceDTO = new RadCompetenceDTO();
//            radCompetenceDTO.setId(viewModel.getRadCompetenceViewModel().getSelectedEntity() == null ? 0 : viewModel.getSelectedEntity().getId());
//            radCompetenceDTO.setBodyRegion((BodyRegionDTO) cmbRcBodyRegion.getSelectedItem());
//            radCompetenceDTO.setCompetenceLevel((Integer) spnRcCompetenceLevel.getValue());
//            radCompetenceDTO.setModality((ModalityDTO) cmbRcModality.getSelectedItem());
//            radCompetenceDTO.setValid(chbRcValid.isSelected());
//            dto = radCompetenceDTO;
        } else if (entityClass == RegLicQualOwnershipDTO.class) {
            RegLicQualOwnershipDTO regLicQualOwnershipDTO = new RegLicQualOwnershipDTO();
            regLicQualOwnershipDTO.setId(viewModel.getRegLicQualOwnershipViewModel().getSelectedEntity() == null ? 0 : viewModel.getSelectedEntity().getId());
            regLicQualOwnershipDTO.setValidBegin(dtcRlqoValidBegin.getDate());
            regLicQualOwnershipDTO.setValidEnd(dtcRlqoValidEnd.getDate());
            regLicQualOwnershipDTO.setRegLicQual((RegLicQualDTO) cmbRlcqRegLicQual.getSelectedItem());
            regLicQualOwnershipDTO.setCertificateNumber(txtRlqoCertificateNumber.getText());
            regLicQualOwnershipDTO.setActive(chbRlqoActive.isSelected());
            dto = regLicQualOwnershipDTO;
        } else if (entityClass == TDSRadiologistRoleAssignmentDTO.class) {
            TDSRadiologistRoleAssignmentDTO roleAssignment = new TDSRadiologistRoleAssignmentDTO();
            roleAssignment.setId(viewModel.getTdsRadiologistRoleAssignmentViewModel().getSelectedEntity() == null ? 0 : viewModel.getSelectedEntity().getId());
            //roleAssignment.setStarted(new SimpleDateFormat("yyyy.MM.dd.").parse(txtRlqoValidBegin.getText()));
            //roleAssignment.setEnded(new SimpleDateFormat("yyyy.MM.dd.").parse(txtRlqoValidEnd.getText()));
            roleAssignment.setTdsRadiologistRole((TDSRadiologistRoleDTO) cmbRoleName.getSelectedItem());
            dto = roleAssignment;
        } else if (entityClass == SuperVisionDTO.class) {
            SuperVisionDTO superVision = new SuperVisionDTO();
            superVision.setId(viewModel.getSuperVisionViewModel().getSelectedEntity() == null ? 0 : viewModel.getSuperVisionViewModel().getSelectedEntity().getId());
            superVision.setSupervised((TDSRadiologistDTO) cmbSuSupervised.getSelectedItem());
            superVision.setStarted(dtpSuStarted.getDate());
            superVision.setEnded(dtpSuEnded.getDate());
            dto = superVision;
        } else if (entityClass == CompanyAssignmentDTO.class) {
            CompanyAssignmentDTO companyAssignment = new CompanyAssignmentDTO();
            companyAssignment.setId(viewModel.getCompanyAssignmentViewModel().getSelectedEntity() == null ? 0 : viewModel.getCompanyAssignmentViewModel().getSelectedEntity().getId());
            companyAssignment.setCompany((CompanyDTO) cmbCaCompany.getSelectedItem());
            companyAssignment.setStarted(dtpCaStarted.getDate());
            companyAssignment.setEnded(dtpCaEnded.getDate());
            companyAssignment.setActive(cbCaActive.isSelected());
            dto = companyAssignment;
        } else if (entityClass == CompanyDTO.class) {
            CompanyDTO company = new CompanyDTO();
            company.setId(viewModel.getCompanyAssignmentViewModel().getSelectedCompany() == null ? 0 : viewModel.getCompanyAssignmentViewModel().getSelectedCompany().getId());
            company.setCountry((CountryDTO) caCmbCountry.getSelectedItem());
            company.setName(txtCaName.getText());
            company.setAddress(txtCaAddress.getText());
            company.setTaxAuthorityNumber(txtCaTaxAuthorityNumber.getText());
            company.setAccountNumber(txtCaAccountNumber.getText());
            dto = company;
        } else if (entityClass == WorkPlaceDTO.class) {
            WorkPlaceDTO workplace = new WorkPlaceDTO();
            workplace.setId(viewModel.getWorkplaceViewModel().getSelectedEntity() == null ? 0 : viewModel.getWorkplaceViewModel().getSelectedEntity().getId());
            workplace.setHospital((HospitalDTO) cmbWpHospital.getSelectedItem());
            workplace.setFromDate(dtpWpFromDate.getDate());
            workplace.setToDate(dtpWpToDate.getDate());
            dto = workplace;
        } else if (entityClass == RadAvailabilityDTO.class) {
            RadAvailabilityDTO radAvailability = new RadAvailabilityDTO();
            radAvailability.setId(viewModel.getRadAvailabilityViewModel().getSelectedEntity() == null ? 0 : viewModel.getRadAvailabilityViewModel().getSelectedEntity().getId());
            dto = radAvailability;
        }
        return dto;
    }
}
