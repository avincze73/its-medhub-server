/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RadiologistView.java
 *
 * Created on 2010.10.04., 14:04:21
 */
package radiologistmodule.view;

import event.CloseActiveViewEvent;
import event.CloseActiveViewEventListener;
import event.EditRadiologistEvent;
import event.EditRadiologistEventListener;
import event.ITSEventManager;
import event.ShowEmptyViewEvent;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import radiologistmodule.dto.TDSRadiologistDTO;
import radiologistmodule.iview.IRadiologistView;
import radiologistmodule.viewmodel.RadiologistViewModel;

/**
 *
 * @author vincze.attila
 */
public class RadiologistView extends javax.swing.JInternalFrame
        implements IRadiologistView,
        EditRadiologistEventListener, CloseActiveViewEventListener {

    private RadiologistViewModel viewModel;
    private RadiologistListView radiologistListView;
    private RadiologistEditView radiologistEditView;

    /** Creates new form RadiologistView */
    public RadiologistView() {
        viewModel = new RadiologistViewModel(this);
        initComponents();
        createViews();
    }

    public RadiologistViewModel getViewModel() {
        return viewModel;
    }

    private void createViews() {
        try {
            ITSEventManager.getEventListenerList().add(EditRadiologistEventListener.class, this);
            ITSEventManager.getEventListenerList().add(CloseActiveViewEventListener.class, this);

            radiologistEditView = new RadiologistEditView();
            dtpRadiologist.add(radiologistEditView);
            radiologistEditView.setMaximum(true);
            radiologistEditView.setVisible(true);

            radiologistListView = new RadiologistListView();
            dtpRadiologist.add(radiologistListView);
            radiologistListView.setMaximum(true);
            radiologistListView.setVisible(true);
            radiologistListView.setSelected(true);

            dtpRadiologist.getDesktopManager().activateFrame(radiologistListView);
            viewModel.setTitle(radiologistListView.getViewModel().getTitle());
        } catch (PropertyVetoException ex) {
            Logger.getLogger(RadiologistView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        dtpRadiologist = new javax.swing.JDesktopPane();

        setBorder(null);
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/radiologistmodule/image/radiologistmodule16.png"))); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${viewModel.title}"), this, org.jdesktop.beansbinding.BeanProperty.create("title"));
        bindingGroup.addBinding(binding);

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().add(dtpRadiologist, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        //HospitalEditView
        try {
            if (dtpRadiologist.getSelectedFrame() instanceof RadiologistEditView) {
                viewModel.setTitle(radiologistListView.getViewModel().getTitle());
                dtpRadiologist.getDesktopManager().activateFrame(radiologistListView);
                radiologistListView.setMaximum(true);
            } else if (dtpRadiologist.getSelectedFrame() instanceof RadiologistListView) {
                this.setVisible(false);
                ITSEventManager.fireShowEmptyViewEvent(new ShowEmptyViewEvent(""));
            }
        } catch (PropertyVetoException ex) {
            Logger.getLogger(RadiologistView.class.getName()).log(Level.SEVERE, null, ex);
        }
        //else if (dtpRadiologist.getSelectedFrame() instanceof HospitalContractEditView) {
        //viewModel.setTitle(dtpRadiologist.getViewModel().getTitle());
        //dtpRadiologist.getDesktopManager().activateFrame(hospitalEditView);
        //}
    }//GEN-LAST:event_formInternalFrameClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dtpRadiologist;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void eventOccured(EditRadiologistEvent evt) {
        try {
            radiologistEditView.getViewModel().loadRadiologist((TDSRadiologistDTO) evt.getSource());
            viewModel.setTitle(radiologistEditView.getViewModel().getTitle());
            radiologistEditView.setMaximum(true);
            dtpRadiologist.getDesktopManager().activateFrame(radiologistEditView);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(RadiologistView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void eventOccured(CloseActiveViewEvent event) {
        formInternalFrameClosing(null);
    }
}
